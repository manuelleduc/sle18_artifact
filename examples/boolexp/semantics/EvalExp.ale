behavior evalexp

import ecore "platform:/resource/boolexp/model/BoolExp.ecore"

open abstract class Exp {
	abstract def boolean eval()
}

open class Tru {
	override boolean eval() {
		return true
	}
}

open class Fals {
	override boolean eval() {
		return false
	}
}

open class And {
	override boolean eval() {
		return alg.$(obj.lhs).eval() && alg.$(obj.rhs).eval()
	}
}

open class Or {
	override boolean eval() {
		return alg.$(obj.lhs).eval() || alg.$(obj.rhs).eval()
	}
}
