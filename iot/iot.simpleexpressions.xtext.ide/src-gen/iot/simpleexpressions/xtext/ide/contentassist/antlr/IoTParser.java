/*
 * generated by Xtext 2.12.0
 */
package iot.simpleexpressions.xtext.ide.contentassist.antlr;

import com.google.inject.Inject;
import iot.simpleexpressions.xtext.ide.contentassist.antlr.internal.InternalIoTParser;
import iot.simpleexpressions.xtext.services.IoTGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class IoTParser extends AbstractContentAssistParser {

	@Inject
	private IoTGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalIoTParser createParser() {
		InternalIoTParser result = new InternalIoTParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getHWComponentAccess().getAlternatives(), "rule__HWComponent__Alternatives");
					put(grammarAccess.getPrimitiveDefAccess().getAlternatives(), "rule__PrimitiveDef__Alternatives");
					put(grammarAccess.getFloating_pt_typeAccess().getAlternatives(), "rule__Floating_pt_type__Alternatives");
					put(grammarAccess.getInteger_typeAccess().getAlternatives(), "rule__Integer_type__Alternatives");
					put(grammarAccess.getCharstr_typeAccess().getAlternatives(), "rule__Charstr_type__Alternatives");
					put(grammarAccess.getOther_typeAccess().getAlternatives(), "rule__Other_type__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getArithAccess().getAlternatives(), "rule__Arith__Alternatives");
					put(grammarAccess.getActivityNodeAccess().getAlternatives(), "rule__ActivityNode__Alternatives");
					put(grammarAccess.getVariableAccess().getAlternatives(), "rule__Variable__Alternatives");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getBooleanValueAccess().getAlternatives_1(), "rule__BooleanValue__Alternatives_1");
					put(grammarAccess.getBoardTypeAccess().getAlternatives(), "rule__BoardType__Alternatives");
					put(grammarAccess.getParam_attributeAccess().getAlternatives(), "rule__Param_attribute__Alternatives");
					put(grammarAccess.getIntegerCalculationOperatorAccess().getAlternatives(), "rule__IntegerCalculationOperator__Alternatives");
					put(grammarAccess.getIntegerComparisonOperatorAccess().getAlternatives(), "rule__IntegerComparisonOperator__Alternatives");
					put(grammarAccess.getBooleanBinaryOperatorAccess().getAlternatives(), "rule__BooleanBinaryOperator__Alternatives");
					put(grammarAccess.getSystemAccess().getGroup(), "rule__System__Group__0");
					put(grammarAccess.getSystemAccess().getGroup_3(), "rule__System__Group_3__0");
					put(grammarAccess.getSystemAccess().getGroup_4(), "rule__System__Group_4__0");
					put(grammarAccess.getSensorAccess().getGroup(), "rule__Sensor__Group__0");
					put(grammarAccess.getSensorAccess().getGroup_2(), "rule__Sensor__Group_2__0");
					put(grammarAccess.getSensorAccess().getGroup_2_1(), "rule__Sensor__Group_2_1__0");
					put(grammarAccess.getActuatorAccess().getGroup(), "rule__Actuator__Group__0");
					put(grammarAccess.getActuatorAccess().getGroup_2(), "rule__Actuator__Group_2__0");
					put(grammarAccess.getActuatorAccess().getGroup_2_1(), "rule__Actuator__Group_2_1__0");
					put(grammarAccess.getBoardAccess().getGroup(), "rule__Board__Group__0");
					put(grammarAccess.getBoardAccess().getGroup_6(), "rule__Board__Group_6__0");
					put(grammarAccess.getBoardAccess().getGroup_6_1(), "rule__Board__Group_6_1__0");
					put(grammarAccess.getSketchAccess().getGroup(), "rule__Sketch__Group__0");
					put(grammarAccess.getIotOperationDefAccess().getGroup(), "rule__IotOperationDef__Group__0");
					put(grammarAccess.getOperationDefAccess().getGroup(), "rule__OperationDef__Group__0");
					put(grammarAccess.getOperationDefAccess().getGroup_3(), "rule__OperationDef__Group_3__0");
					put(grammarAccess.getOperationDefAccess().getGroup_3_1(), "rule__OperationDef__Group_3_1__0");
					put(grammarAccess.getIdlStmtAccess().getGroup(), "rule__IdlStmt__Group__0");
					put(grammarAccess.getParameterDefAccess().getGroup(), "rule__ParameterDef__Group__0");
					put(grammarAccess.getLongdouble_typeAccess().getGroup(), "rule__Longdouble_type__Group__0");
					put(grammarAccess.getLonglong_typeAccess().getGroup(), "rule__Longlong_type__Group__0");
					put(grammarAccess.getUshort_typeAccess().getGroup(), "rule__Ushort_type__Group__0");
					put(grammarAccess.getUlong_typeAccess().getGroup(), "rule__Ulong_type__Group__0");
					put(grammarAccess.getUlonglong_typeAccess().getGroup(), "rule__Ulonglong_type__Group__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getPrintAccess().getGroup(), "rule__Print__Group__0");
					put(grammarAccess.getAssignAccess().getGroup(), "rule__Assign__Group__0");
					put(grammarAccess.getIfStmtAccess().getGroup(), "rule__IfStmt__Group__0");
					put(grammarAccess.getIfStmtAccess().getGroup_6(), "rule__IfStmt__Group_6__0");
					put(grammarAccess.getEqualityTestAccess().getGroup(), "rule__EqualityTest__Group__0");
					put(grammarAccess.getASPlusAccess().getGroup(), "rule__ASPlus__Group__0");
					put(grammarAccess.getASPlusAccess().getGroup_1(), "rule__ASPlus__Group_1__0");
					put(grammarAccess.getASMinusAccess().getGroup(), "rule__ASMinus__Group__0");
					put(grammarAccess.getASMinusAccess().getGroup_1(), "rule__ASMinus__Group_1__0");
					put(grammarAccess.getParenthesisAccess().getGroup(), "rule__Parenthesis__Group__0");
					put(grammarAccess.getALLitAccess().getGroup(), "rule__ALLit__Group__0");
					put(grammarAccess.getVarRefAccess().getGroup(), "rule__VarRef__Group__0");
					put(grammarAccess.getRandAccess().getGroup(), "rule__Rand__Group__0");
					put(grammarAccess.getIotActivityAccess().getGroup(), "rule__IotActivity__Group__0");
					put(grammarAccess.getActivityAccess().getGroup(), "rule__Activity__Group__0");
					put(grammarAccess.getActivityAccess().getGroup_3(), "rule__Activity__Group_3__0");
					put(grammarAccess.getActivityAccess().getGroup_3_2(), "rule__Activity__Group_3_2__0");
					put(grammarAccess.getActivityAccess().getGroup_5(), "rule__Activity__Group_5__0");
					put(grammarAccess.getActivityAccess().getGroup_5_1(), "rule__Activity__Group_5_1__0");
					put(grammarAccess.getActivityAccess().getGroup_6(), "rule__Activity__Group_6__0");
					put(grammarAccess.getActivityAccess().getGroup_6_3(), "rule__Activity__Group_6_3__0");
					put(grammarAccess.getActivityAccess().getGroup_7(), "rule__Activity__Group_7__0");
					put(grammarAccess.getActivityAccess().getGroup_7_3(), "rule__Activity__Group_7_3__0");
					put(grammarAccess.getOpaqueActionAccess().getGroup(), "rule__OpaqueAction__Group__0");
					put(grammarAccess.getOpaqueActionAccess().getGroup_3(), "rule__OpaqueAction__Group_3__0");
					put(grammarAccess.getOpaqueActionAccess().getGroup_3_3(), "rule__OpaqueAction__Group_3_3__0");
					put(grammarAccess.getOpaqueActionAccess().getGroup_4(), "rule__OpaqueAction__Group_4__0");
					put(grammarAccess.getOpaqueActionAccess().getGroup_4_3(), "rule__OpaqueAction__Group_4_3__0");
					put(grammarAccess.getOpaqueActionAccess().getGroup_5(), "rule__OpaqueAction__Group_5__0");
					put(grammarAccess.getOpaqueActionAccess().getGroup_5_3(), "rule__OpaqueAction__Group_5_3__0");
					put(grammarAccess.getOpaqueActionAccess().getGroup_6(), "rule__OpaqueAction__Group_6__0");
					put(grammarAccess.getExpBindOpDefAccess().getGroup(), "rule__ExpBindOpDef__Group__0");
					put(grammarAccess.getExpBindStatementAccess().getGroup(), "rule__ExpBindStatement__Group__0");
					put(grammarAccess.getIntegerCalculationExpressionAccess().getGroup(), "rule__IntegerCalculationExpression__Group__0");
					put(grammarAccess.getIntegerComparisonExpressionAccess().getGroup(), "rule__IntegerComparisonExpression__Group__0");
					put(grammarAccess.getBooleanUnaryExpressionAccess().getGroup(), "rule__BooleanUnaryExpression__Group__0");
					put(grammarAccess.getBooleanBinaryExpressionAccess().getGroup(), "rule__BooleanBinaryExpression__Group__0");
					put(grammarAccess.getInitialNodeAccess().getGroup(), "rule__InitialNode__Group__0");
					put(grammarAccess.getInitialNodeAccess().getGroup_3(), "rule__InitialNode__Group_3__0");
					put(grammarAccess.getInitialNodeAccess().getGroup_3_3(), "rule__InitialNode__Group_3_3__0");
					put(grammarAccess.getActivityFinalNodeAccess().getGroup(), "rule__ActivityFinalNode__Group__0");
					put(grammarAccess.getActivityFinalNodeAccess().getGroup_3(), "rule__ActivityFinalNode__Group_3__0");
					put(grammarAccess.getActivityFinalNodeAccess().getGroup_3_3(), "rule__ActivityFinalNode__Group_3_3__0");
					put(grammarAccess.getForkNodeAccess().getGroup(), "rule__ForkNode__Group__0");
					put(grammarAccess.getForkNodeAccess().getGroup_3(), "rule__ForkNode__Group_3__0");
					put(grammarAccess.getForkNodeAccess().getGroup_4(), "rule__ForkNode__Group_4__0");
					put(grammarAccess.getForkNodeAccess().getGroup_4_3(), "rule__ForkNode__Group_4_3__0");
					put(grammarAccess.getJoinNodeAccess().getGroup(), "rule__JoinNode__Group__0");
					put(grammarAccess.getJoinNodeAccess().getGroup_3(), "rule__JoinNode__Group_3__0");
					put(grammarAccess.getJoinNodeAccess().getGroup_3_3(), "rule__JoinNode__Group_3_3__0");
					put(grammarAccess.getJoinNodeAccess().getGroup_4(), "rule__JoinNode__Group_4__0");
					put(grammarAccess.getMergeNodeAccess().getGroup(), "rule__MergeNode__Group__0");
					put(grammarAccess.getMergeNodeAccess().getGroup_3(), "rule__MergeNode__Group_3__0");
					put(grammarAccess.getMergeNodeAccess().getGroup_3_3(), "rule__MergeNode__Group_3_3__0");
					put(grammarAccess.getMergeNodeAccess().getGroup_4(), "rule__MergeNode__Group_4__0");
					put(grammarAccess.getDecisionNodeAccess().getGroup(), "rule__DecisionNode__Group__0");
					put(grammarAccess.getDecisionNodeAccess().getGroup_3(), "rule__DecisionNode__Group_3__0");
					put(grammarAccess.getDecisionNodeAccess().getGroup_4(), "rule__DecisionNode__Group_4__0");
					put(grammarAccess.getDecisionNodeAccess().getGroup_4_3(), "rule__DecisionNode__Group_4_3__0");
					put(grammarAccess.getIntegerVariableAccess().getGroup(), "rule__IntegerVariable__Group__0");
					put(grammarAccess.getBooleanVariableAccess().getGroup(), "rule__BooleanVariable__Group__0");
					put(grammarAccess.getBooleanVariableDeclAccess().getGroup(), "rule__BooleanVariableDecl__Group__0");
					put(grammarAccess.getIntegerVariableDeclAccess().getGroup(), "rule__IntegerVariableDecl__Group__0");
					put(grammarAccess.getBooleanValueAccess().getGroup(), "rule__BooleanValue__Group__0");
					put(grammarAccess.getIntegerValueAccess().getGroup(), "rule__IntegerValue__Group__0");
					put(grammarAccess.getControlFlowAccess().getGroup(), "rule__ControlFlow__Group__0");
					put(grammarAccess.getControlFlowAccess().getGroup_6(), "rule__ControlFlow__Group_6__0");
					put(grammarAccess.getSystemAccess().getNameAssignment_1(), "rule__System__NameAssignment_1");
					put(grammarAccess.getSystemAccess().getComponentsAssignment_3_0(), "rule__System__ComponentsAssignment_3_0");
					put(grammarAccess.getSystemAccess().getComponentsAssignment_3_1(), "rule__System__ComponentsAssignment_3_1");
					put(grammarAccess.getSystemAccess().getBoardsAssignment_4_0(), "rule__System__BoardsAssignment_4_0");
					put(grammarAccess.getSystemAccess().getBoardsAssignment_4_1(), "rule__System__BoardsAssignment_4_1");
					put(grammarAccess.getSystemAccess().getSketchAssignment_5(), "rule__System__SketchAssignment_5");
					put(grammarAccess.getSensorAccess().getNameAssignment_1(), "rule__Sensor__NameAssignment_1");
					put(grammarAccess.getSensorAccess().getServicesAssignment_2_1_1(), "rule__Sensor__ServicesAssignment_2_1_1");
					put(grammarAccess.getActuatorAccess().getNameAssignment_1(), "rule__Actuator__NameAssignment_1");
					put(grammarAccess.getActuatorAccess().getServicesAssignment_2_1_1(), "rule__Actuator__ServicesAssignment_2_1_1");
					put(grammarAccess.getBoardAccess().getNameAssignment_2(), "rule__Board__NameAssignment_2");
					put(grammarAccess.getBoardAccess().getTypeAssignment_4(), "rule__Board__TypeAssignment_4");
					put(grammarAccess.getBoardAccess().getComponentsAssignment_6_1_1(), "rule__Board__ComponentsAssignment_6_1_1");
					put(grammarAccess.getSketchAccess().getActivityAssignment_3(), "rule__Sketch__ActivityAssignment_3");
					put(grammarAccess.getIotOperationDefAccess().getDelegateAssignment_1(), "rule__IotOperationDef__DelegateAssignment_1");
					put(grammarAccess.getOperationDefAccess().getIdentifierAssignment_1(), "rule__OperationDef__IdentifierAssignment_1");
					put(grammarAccess.getOperationDefAccess().getParametersAssignment_3_0(), "rule__OperationDef__ParametersAssignment_3_0");
					put(grammarAccess.getOperationDefAccess().getParametersAssignment_3_1_1(), "rule__OperationDef__ParametersAssignment_3_1_1");
					put(grammarAccess.getOperationDefAccess().getStmtAssignment_6(), "rule__OperationDef__StmtAssignment_6");
					put(grammarAccess.getIdlStmtAccess().getDelegateAssignment_1(), "rule__IdlStmt__DelegateAssignment_1");
					put(grammarAccess.getParameterDefAccess().getDirectionAssignment_0(), "rule__ParameterDef__DirectionAssignment_0");
					put(grammarAccess.getParameterDefAccess().getIdentifierAssignment_1(), "rule__ParameterDef__IdentifierAssignment_1");
					put(grammarAccess.getFloating_pt_typeAccess().getKindAssignment_0(), "rule__Floating_pt_type__KindAssignment_0");
					put(grammarAccess.getFloating_pt_typeAccess().getKindAssignment_1(), "rule__Floating_pt_type__KindAssignment_1");
					put(grammarAccess.getFloating_pt_typeAccess().getKindAssignment_2(), "rule__Floating_pt_type__KindAssignment_2");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_0(), "rule__Integer_type__KindAssignment_0");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_1(), "rule__Integer_type__KindAssignment_1");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_2(), "rule__Integer_type__KindAssignment_2");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_3(), "rule__Integer_type__KindAssignment_3");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_4(), "rule__Integer_type__KindAssignment_4");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_5(), "rule__Integer_type__KindAssignment_5");
					put(grammarAccess.getCharstr_typeAccess().getKindAssignment_0(), "rule__Charstr_type__KindAssignment_0");
					put(grammarAccess.getCharstr_typeAccess().getKindAssignment_1(), "rule__Charstr_type__KindAssignment_1");
					put(grammarAccess.getCharstr_typeAccess().getKindAssignment_2(), "rule__Charstr_type__KindAssignment_2");
					put(grammarAccess.getCharstr_typeAccess().getKindAssignment_3(), "rule__Charstr_type__KindAssignment_3");
					put(grammarAccess.getOther_typeAccess().getKindAssignment_0(), "rule__Other_type__KindAssignment_0");
					put(grammarAccess.getOther_typeAccess().getKindAssignment_1(), "rule__Other_type__KindAssignment_1");
					put(grammarAccess.getOther_typeAccess().getKindAssignment_2(), "rule__Other_type__KindAssignment_2");
					put(grammarAccess.getBlockAccess().getStmtsAssignment_1(), "rule__Block__StmtsAssignment_1");
					put(grammarAccess.getPrintAccess().getNameAssignment_3(), "rule__Print__NameAssignment_3");
					put(grammarAccess.getAssignAccess().getNameAssignment_0(), "rule__Assign__NameAssignment_0");
					put(grammarAccess.getAssignAccess().getValAssignment_2(), "rule__Assign__ValAssignment_2");
					put(grammarAccess.getIfStmtAccess().getTestAssignment_2(), "rule__IfStmt__TestAssignment_2");
					put(grammarAccess.getIfStmtAccess().getIfBranchAssignment_5(), "rule__IfStmt__IfBranchAssignment_5");
					put(grammarAccess.getIfStmtAccess().getElseBranchAssignment_6_1(), "rule__IfStmt__ElseBranchAssignment_6_1");
					put(grammarAccess.getEqualityTestAccess().getLhsAssignment_0(), "rule__EqualityTest__LhsAssignment_0");
					put(grammarAccess.getEqualityTestAccess().getRhsAssignment_2(), "rule__EqualityTest__RhsAssignment_2");
					put(grammarAccess.getASPlusAccess().getRhsAssignment_1_2(), "rule__ASPlus__RhsAssignment_1_2");
					put(grammarAccess.getASMinusAccess().getRhsAssignment_1_2(), "rule__ASMinus__RhsAssignment_1_2");
					put(grammarAccess.getALLitAccess().getValAssignment_1(), "rule__ALLit__ValAssignment_1");
					put(grammarAccess.getVarRefAccess().getNameAssignment_1(), "rule__VarRef__NameAssignment_1");
					put(grammarAccess.getRandAccess().getMinAssignment_2(), "rule__Rand__MinAssignment_2");
					put(grammarAccess.getRandAccess().getMaxAssignment_4(), "rule__Rand__MaxAssignment_4");
					put(grammarAccess.getIotActivityAccess().getDelegateAssignment_1(), "rule__IotActivity__DelegateAssignment_1");
					put(grammarAccess.getActivityAccess().getNameAssignment_2(), "rule__Activity__NameAssignment_2");
					put(grammarAccess.getActivityAccess().getInputsAssignment_3_1(), "rule__Activity__InputsAssignment_3_1");
					put(grammarAccess.getActivityAccess().getInputsAssignment_3_2_1(), "rule__Activity__InputsAssignment_3_2_1");
					put(grammarAccess.getActivityAccess().getLocalsAssignment_5_0(), "rule__Activity__LocalsAssignment_5_0");
					put(grammarAccess.getActivityAccess().getLocalsAssignment_5_1_1(), "rule__Activity__LocalsAssignment_5_1_1");
					put(grammarAccess.getActivityAccess().getNodesAssignment_6_2(), "rule__Activity__NodesAssignment_6_2");
					put(grammarAccess.getActivityAccess().getNodesAssignment_6_3_1(), "rule__Activity__NodesAssignment_6_3_1");
					put(grammarAccess.getActivityAccess().getEdgesAssignment_7_2(), "rule__Activity__EdgesAssignment_7_2");
					put(grammarAccess.getActivityAccess().getEdgesAssignment_7_3_1(), "rule__Activity__EdgesAssignment_7_3_1");
					put(grammarAccess.getOpaqueActionAccess().getNameAssignment_2(), "rule__OpaqueAction__NameAssignment_2");
					put(grammarAccess.getOpaqueActionAccess().getExpressionsAssignment_3_2(), "rule__OpaqueAction__ExpressionsAssignment_3_2");
					put(grammarAccess.getOpaqueActionAccess().getExpressionsAssignment_3_3_1(), "rule__OpaqueAction__ExpressionsAssignment_3_3_1");
					put(grammarAccess.getOpaqueActionAccess().getIncomingAssignment_4_2(), "rule__OpaqueAction__IncomingAssignment_4_2");
					put(grammarAccess.getOpaqueActionAccess().getIncomingAssignment_4_3_1(), "rule__OpaqueAction__IncomingAssignment_4_3_1");
					put(grammarAccess.getOpaqueActionAccess().getOutgoingAssignment_5_2(), "rule__OpaqueAction__OutgoingAssignment_5_2");
					put(grammarAccess.getOpaqueActionAccess().getOutgoingAssignment_5_3_1(), "rule__OpaqueAction__OutgoingAssignment_5_3_1");
					put(grammarAccess.getOpaqueActionAccess().getExpressionsAssignment_6_1(), "rule__OpaqueAction__ExpressionsAssignment_6_1");
					put(grammarAccess.getExpBindOpDefAccess().getDelegateAssignment_1(), "rule__ExpBindOpDef__DelegateAssignment_1");
					put(grammarAccess.getExpBindStatementAccess().getDelegateAssignment_1(), "rule__ExpBindStatement__DelegateAssignment_1");
					put(grammarAccess.getIntegerCalculationExpressionAccess().getAssigneeAssignment_0(), "rule__IntegerCalculationExpression__AssigneeAssignment_0");
					put(grammarAccess.getIntegerCalculationExpressionAccess().getOperand1Assignment_2(), "rule__IntegerCalculationExpression__Operand1Assignment_2");
					put(grammarAccess.getIntegerCalculationExpressionAccess().getOperatorAssignment_3(), "rule__IntegerCalculationExpression__OperatorAssignment_3");
					put(grammarAccess.getIntegerCalculationExpressionAccess().getOperand2Assignment_4(), "rule__IntegerCalculationExpression__Operand2Assignment_4");
					put(grammarAccess.getIntegerComparisonExpressionAccess().getAssigneeAssignment_0(), "rule__IntegerComparisonExpression__AssigneeAssignment_0");
					put(grammarAccess.getIntegerComparisonExpressionAccess().getOperand1Assignment_2(), "rule__IntegerComparisonExpression__Operand1Assignment_2");
					put(grammarAccess.getIntegerComparisonExpressionAccess().getOperatorAssignment_3(), "rule__IntegerComparisonExpression__OperatorAssignment_3");
					put(grammarAccess.getIntegerComparisonExpressionAccess().getOperand2Assignment_4(), "rule__IntegerComparisonExpression__Operand2Assignment_4");
					put(grammarAccess.getBooleanUnaryExpressionAccess().getAssigneeAssignment_0(), "rule__BooleanUnaryExpression__AssigneeAssignment_0");
					put(grammarAccess.getBooleanUnaryExpressionAccess().getOperatorAssignment_2(), "rule__BooleanUnaryExpression__OperatorAssignment_2");
					put(grammarAccess.getBooleanUnaryExpressionAccess().getOperandAssignment_3(), "rule__BooleanUnaryExpression__OperandAssignment_3");
					put(grammarAccess.getBooleanBinaryExpressionAccess().getAssigneeAssignment_0(), "rule__BooleanBinaryExpression__AssigneeAssignment_0");
					put(grammarAccess.getBooleanBinaryExpressionAccess().getOperand1Assignment_2(), "rule__BooleanBinaryExpression__Operand1Assignment_2");
					put(grammarAccess.getBooleanBinaryExpressionAccess().getOperatorAssignment_3(), "rule__BooleanBinaryExpression__OperatorAssignment_3");
					put(grammarAccess.getBooleanBinaryExpressionAccess().getOperand2Assignment_4(), "rule__BooleanBinaryExpression__Operand2Assignment_4");
					put(grammarAccess.getInitialNodeAccess().getNameAssignment_2(), "rule__InitialNode__NameAssignment_2");
					put(grammarAccess.getInitialNodeAccess().getOutgoingAssignment_3_2(), "rule__InitialNode__OutgoingAssignment_3_2");
					put(grammarAccess.getInitialNodeAccess().getOutgoingAssignment_3_3_1(), "rule__InitialNode__OutgoingAssignment_3_3_1");
					put(grammarAccess.getActivityFinalNodeAccess().getNameAssignment_2(), "rule__ActivityFinalNode__NameAssignment_2");
					put(grammarAccess.getActivityFinalNodeAccess().getIncomingAssignment_3_2(), "rule__ActivityFinalNode__IncomingAssignment_3_2");
					put(grammarAccess.getActivityFinalNodeAccess().getIncomingAssignment_3_3_1(), "rule__ActivityFinalNode__IncomingAssignment_3_3_1");
					put(grammarAccess.getForkNodeAccess().getNameAssignment_2(), "rule__ForkNode__NameAssignment_2");
					put(grammarAccess.getForkNodeAccess().getIncomingAssignment_3_2(), "rule__ForkNode__IncomingAssignment_3_2");
					put(grammarAccess.getForkNodeAccess().getOutgoingAssignment_4_2(), "rule__ForkNode__OutgoingAssignment_4_2");
					put(grammarAccess.getForkNodeAccess().getOutgoingAssignment_4_3_1(), "rule__ForkNode__OutgoingAssignment_4_3_1");
					put(grammarAccess.getJoinNodeAccess().getNameAssignment_2(), "rule__JoinNode__NameAssignment_2");
					put(grammarAccess.getJoinNodeAccess().getIncomingAssignment_3_2(), "rule__JoinNode__IncomingAssignment_3_2");
					put(grammarAccess.getJoinNodeAccess().getIncomingAssignment_3_3_1(), "rule__JoinNode__IncomingAssignment_3_3_1");
					put(grammarAccess.getJoinNodeAccess().getOutgoingAssignment_4_2(), "rule__JoinNode__OutgoingAssignment_4_2");
					put(grammarAccess.getMergeNodeAccess().getNameAssignment_2(), "rule__MergeNode__NameAssignment_2");
					put(grammarAccess.getMergeNodeAccess().getIncomingAssignment_3_2(), "rule__MergeNode__IncomingAssignment_3_2");
					put(grammarAccess.getMergeNodeAccess().getIncomingAssignment_3_3_1(), "rule__MergeNode__IncomingAssignment_3_3_1");
					put(grammarAccess.getMergeNodeAccess().getOutgoingAssignment_4_2(), "rule__MergeNode__OutgoingAssignment_4_2");
					put(grammarAccess.getDecisionNodeAccess().getNameAssignment_2(), "rule__DecisionNode__NameAssignment_2");
					put(grammarAccess.getDecisionNodeAccess().getIncomingAssignment_3_2(), "rule__DecisionNode__IncomingAssignment_3_2");
					put(grammarAccess.getDecisionNodeAccess().getOutgoingAssignment_4_2(), "rule__DecisionNode__OutgoingAssignment_4_2");
					put(grammarAccess.getDecisionNodeAccess().getOutgoingAssignment_4_3_1(), "rule__DecisionNode__OutgoingAssignment_4_3_1");
					put(grammarAccess.getIntegerVariableAccess().getDelegateAssignment_2(), "rule__IntegerVariable__DelegateAssignment_2");
					put(grammarAccess.getBooleanVariableAccess().getDelegateAssignment_2(), "rule__BooleanVariable__DelegateAssignment_2");
					put(grammarAccess.getBooleanVariableDeclAccess().getNameAssignment_0(), "rule__BooleanVariableDecl__NameAssignment_0");
					put(grammarAccess.getBooleanVariableDeclAccess().getInitialValueAssignment_2(), "rule__BooleanVariableDecl__InitialValueAssignment_2");
					put(grammarAccess.getIntegerVariableDeclAccess().getNameAssignment_0(), "rule__IntegerVariableDecl__NameAssignment_0");
					put(grammarAccess.getIntegerVariableDeclAccess().getInitialValueAssignment_2(), "rule__IntegerVariableDecl__InitialValueAssignment_2");
					put(grammarAccess.getBooleanValueAccess().getValueAssignment_1_0(), "rule__BooleanValue__ValueAssignment_1_0");
					put(grammarAccess.getIntegerValueAccess().getValueAssignment_1(), "rule__IntegerValue__ValueAssignment_1");
					put(grammarAccess.getControlFlowAccess().getNameAssignment_1(), "rule__ControlFlow__NameAssignment_1");
					put(grammarAccess.getControlFlowAccess().getSourceAssignment_3(), "rule__ControlFlow__SourceAssignment_3");
					put(grammarAccess.getControlFlowAccess().getTargetAssignment_5(), "rule__ControlFlow__TargetAssignment_5");
					put(grammarAccess.getControlFlowAccess().getGuardAssignment_6_1(), "rule__ControlFlow__GuardAssignment_6_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public IoTGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(IoTGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
