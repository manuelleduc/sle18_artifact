/*
 * generated by Xtext 2.12.0
 */
package iot.simpleexpressions.xtext.formatting2

import com.google.inject.Inject
import iot.Board
import iot.HWComp
import iot.IotOperationDef
import iot.Sensor
import iot.simpleexpressions.xtext.services.IoTGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class IoTFormatter extends AbstractFormatter2 {
	
	@Inject extension IoTGrammarAccess

	def dispatch void format(iot.System system, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (HWComp hWComp : system.getComponents()) {
			hWComp.format;
		}
		for (Board board : system.getBoards()) {
			board.format;
		}
		system.getSketch.format;
	}

	def dispatch void format(Sensor sensor, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (IotOperationDef iotOperationDef : sensor.getServices()) {
			iotOperationDef.format;
		}
	}
	
	// TODO: implement for Actuator, Sketch, IotOperationDefBindOperationDef, OperationDef, IdlStmtBindBlock, Block, SEBooleanBinaryExpression, SEIntegerComparisonExpression, SEBooleanUnaryExpression, IoTActivityBindActivity, Activity, OpaqueAction, ExpressionBindSEExpression
}
