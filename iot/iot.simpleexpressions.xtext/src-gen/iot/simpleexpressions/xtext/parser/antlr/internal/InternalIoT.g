/*
 * generated by Xtext 2.12.0
 */
grammar InternalIoT;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package iot.simpleexpressions.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package iot.simpleexpressions.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import iot.simpleexpressions.xtext.services.IoTGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private IoTGrammarAccess grammarAccess;

    public InternalIoTParser(TokenStream input, IoTGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "System";
   	}

   	@Override
   	protected IoTGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	iv_ruleSystem=ruleSystem
	{ $current=$iv_ruleSystem.current; }
	EOF;

// Rule System
ruleSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getComponentsHWComponentParserRuleCall_3_0_0());
					}
					lv_components_3_0=ruleHWComponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"components",
							lv_components_3_0,
							"iot.simpleexpressions.xtext.IoT.HWComponent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getComponentsHWComponentParserRuleCall_3_1_0());
					}
					lv_components_4_0=ruleHWComponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"components",
							lv_components_4_0,
							"iot.simpleexpressions.xtext.IoT.HWComponent");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getBoardsBoardParserRuleCall_4_0_0());
					}
					lv_boards_5_0=ruleBoard
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"boards",
							lv_boards_5_0,
							"iot.simpleexpressions.xtext.IoT.Board");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getBoardsBoardParserRuleCall_4_1_0());
					}
					lv_boards_6_0=ruleBoard
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"boards",
							lv_boards_6_0,
							"iot.simpleexpressions.xtext.IoT.Board");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getSketchSketchParserRuleCall_5_0());
				}
				lv_sketch_7_0=ruleSketch
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					set(
						$current,
						"sketch",
						lv_sketch_7_0,
						"iot.simpleexpressions.xtext.IoT.Sketch");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleHWComponent
entryRuleHWComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHWComponentRule()); }
	iv_ruleHWComponent=ruleHWComponent
	{ $current=$iv_ruleHWComponent.current; }
	EOF;

// Rule HWComponent
ruleHWComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getHWComponentAccess().getSensorParserRuleCall_0());
		}
		this_Sensor_0=ruleSensor
		{
			$current = $this_Sensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getHWComponentAccess().getActuatorParserRuleCall_1());
		}
		this_Actuator_1=ruleActuator
		{
			$current = $this_Actuator_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorAccess().getSensorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				otherlv_3='provides'
				{
					newLeafNode(otherlv_3, grammarAccess.getSensorAccess().getProvidesKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSensorAccess().getServicesIotOperationDefParserRuleCall_2_1_1_0());
						}
						lv_services_4_0=ruleIotOperationDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSensorRule());
							}
							add(
								$current,
								"services",
								lv_services_4_0,
								"iot.simpleexpressions.xtext.IoT.IotOperationDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	iv_ruleActuator=ruleActuator
	{ $current=$iv_ruleActuator.current; }
	EOF;

// Rule Actuator
ruleActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actuator'
		{
			newLeafNode(otherlv_0, grammarAccess.getActuatorAccess().getActuatorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActuatorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getActuatorAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				otherlv_3='provides'
				{
					newLeafNode(otherlv_3, grammarAccess.getActuatorAccess().getProvidesKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActuatorAccess().getServicesIotOperationDefParserRuleCall_2_1_1_0());
						}
						lv_services_4_0=ruleIotOperationDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActuatorRule());
							}
							add(
								$current,
								"services",
								lv_services_4_0,
								"iot.simpleexpressions.xtext.IoT.IotOperationDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getActuatorAccess().getRightCurlyBracketKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleBoard
entryRuleBoard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoardRule()); }
	iv_ruleBoard=ruleBoard
	{ $current=$iv_ruleBoard.current; }
	EOF;

// Rule Board
ruleBoard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoardAccess().getBoardAction_0(),
					$current);
			}
		)
		otherlv_1='board'
		{
			newLeafNode(otherlv_1, grammarAccess.getBoardAccess().getBoardKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getBoardAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoardRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getBoardAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoardAccess().getTypeBoardTypeEnumRuleCall_4_0());
				}
				lv_type_4_0=ruleBoardType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoardRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"iot.simpleexpressions.xtext.IoT.BoardType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getBoardAccess().getRightSquareBracketKeyword_5());
		}
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getBoardAccess().getLeftCurlyBracketKeyword_6_0());
			}
			(
				otherlv_7='provides'
				{
					newLeafNode(otherlv_7, grammarAccess.getBoardAccess().getProvidesKeyword_6_1_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBoardRule());
							}
						}
						otherlv_8=RULE_ID
						{
							newLeafNode(otherlv_8, grammarAccess.getBoardAccess().getComponentsHWCompCrossReference_6_1_1_0());
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getBoardAccess().getRightCurlyBracketKeyword_6_2());
			}
		)?
	)
;

// Entry rule entryRuleSketch
entryRuleSketch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSketchRule()); }
	iv_ruleSketch=ruleSketch
	{ $current=$iv_ruleSketch.current; }
	EOF;

// Rule Sketch
ruleSketch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSketchAccess().getSketchAction_0(),
					$current);
			}
		)
		otherlv_1='sketch'
		{
			newLeafNode(otherlv_1, grammarAccess.getSketchAccess().getSketchKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSketchAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSketchAccess().getActivityIotActivityParserRuleCall_3_0());
				}
				lv_activity_3_0=ruleIotActivity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSketchRule());
					}
					set(
						$current,
						"activity",
						lv_activity_3_0,
						"iot.simpleexpressions.xtext.IoT.IotActivity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSketchAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleIotOperationDef
entryRuleIotOperationDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIotOperationDefRule()); }
	iv_ruleIotOperationDef=ruleIotOperationDef
	{ $current=$iv_ruleIotOperationDef.current; }
	EOF;

// Rule IotOperationDef
ruleIotOperationDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIotOperationDefAccess().getIotOperationDefBindOperationDefAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIotOperationDefAccess().getDelegateOperationDefParserRuleCall_1_0());
				}
				lv_delegate_1_0=ruleOperationDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIotOperationDefRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_1_0,
						"iot.simpleexpressions.xtext.IoT.OperationDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationDef
entryRuleOperationDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefRule()); }
	iv_ruleOperationDef=ruleOperationDef
	{ $current=$iv_ruleOperationDef.current; }
	EOF;

// Rule OperationDef
ruleOperationDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='operation'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationDefAccess().getOperationKeyword_0());
		}
		(
			(
				lv_identifier_1_0=RULE_ID
				{
					newLeafNode(lv_identifier_1_0, grammarAccess.getOperationDefAccess().getIdentifierIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationDefRule());
					}
					setWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getOperationDefAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefAccess().getParametersParameterDefParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleParameterDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"iot.simpleexpressions.xtext.IoT.ParameterDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getOperationDefAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationDefAccess().getParametersParameterDefParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleParameterDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationDefRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"iot.simpleexpressions.xtext.IoT.ParameterDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getOperationDefAccess().getRightParenthesisKeyword_4());
		}
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getOperationDefAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationDefAccess().getStmtIdlStmtParserRuleCall_6_0());
				}
				lv_stmt_8_0=ruleIdlStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationDefRule());
					}
					set(
						$current,
						"stmt",
						lv_stmt_8_0,
						"iot.simpleexpressions.xtext.IoT.IdlStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getOperationDefAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleIdlStmt
entryRuleIdlStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdlStmtRule()); }
	iv_ruleIdlStmt=ruleIdlStmt
	{ $current=$iv_ruleIdlStmt.current; }
	EOF;

// Rule IdlStmt
ruleIdlStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIdlStmtAccess().getIdlStmtBindBlockAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIdlStmtAccess().getDelegateBlockParserRuleCall_1_0());
				}
				lv_delegate_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdlStmtRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_1_0,
						"iot.simpleexpressions.xtext.IoT.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameterDef
entryRuleParameterDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterDefRule()); }
	iv_ruleParameterDef=ruleParameterDef
	{ $current=$iv_ruleParameterDef.current; }
	EOF;

// Rule ParameterDef
ruleParameterDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterDefAccess().getDirectionParam_attributeEnumRuleCall_0_0());
				}
				lv_direction_0_0=ruleparam_attribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterDefRule());
					}
					set(
						$current,
						"direction",
						lv_direction_0_0,
						"iot.simpleexpressions.xtext.IoT.param_attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_identifier_1_0=RULE_ID
				{
					newLeafNode(lv_identifier_1_0, grammarAccess.getParameterDefAccess().getIdentifierIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterDefRule());
					}
					setWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulefloating_pt_type
entryRulefloating_pt_type returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloating_pt_typeRule()); }
	iv_rulefloating_pt_type=rulefloating_pt_type
	{ $current=$iv_rulefloating_pt_type.current; }
	EOF;

// Rule floating_pt_type
rulefloating_pt_type returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFloating_pt_typeAccess().getKindFloat_typeEnumRuleCall_0_0());
				}
				lv_kind_0_0=rulefloat_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFloating_pt_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"iot.simpleexpressions.xtext.IoT.float_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFloating_pt_typeAccess().getKindDouble_typeEnumRuleCall_1_0());
				}
				lv_kind_1_0=ruledouble_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFloating_pt_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"iot.simpleexpressions.xtext.IoT.double_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFloating_pt_typeAccess().getKindLongdouble_typeParserRuleCall_2_0());
				}
				lv_kind_2_0=rulelongdouble_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFloating_pt_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_2_0,
						"iot.simpleexpressions.xtext.IoT.longdouble_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulelongdouble_type
entryRulelongdouble_type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLongdouble_typeRule()); }
	iv_rulelongdouble_type=rulelongdouble_type
	{ $current=$iv_rulelongdouble_type.current.getText(); }
	EOF;

// Rule longdouble_type
rulelongdouble_type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLongdouble_typeAccess().getLongKeyword_0());
		}
		kw='double'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLongdouble_typeAccess().getDoubleKeyword_1());
		}
	)
;

// Entry rule entryRuleinteger_type
entryRuleinteger_type returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInteger_typeRule()); }
	iv_ruleinteger_type=ruleinteger_type
	{ $current=$iv_ruleinteger_type.current; }
	EOF;

// Rule integer_type
ruleinteger_type returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindShort_typeEnumRuleCall_0_0());
				}
				lv_kind_0_0=ruleshort_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"iot.simpleexpressions.xtext.IoT.short_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindLong_typeEnumRuleCall_1_0());
				}
				lv_kind_1_0=rulelong_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"iot.simpleexpressions.xtext.IoT.long_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindLonglong_typeParserRuleCall_2_0());
				}
				lv_kind_2_0=rulelonglong_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_2_0,
						"iot.simpleexpressions.xtext.IoT.longlong_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindUshort_typeParserRuleCall_3_0());
				}
				lv_kind_3_0=ruleushort_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_3_0,
						"iot.simpleexpressions.xtext.IoT.ushort_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindUlong_typeParserRuleCall_4_0());
				}
				lv_kind_4_0=ruleulong_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_4_0,
						"iot.simpleexpressions.xtext.IoT.ulong_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindUlonglong_typeParserRuleCall_5_0());
				}
				lv_kind_5_0=ruleulonglong_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_5_0,
						"iot.simpleexpressions.xtext.IoT.ulonglong_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulelonglong_type
entryRulelonglong_type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLonglong_typeRule()); }
	iv_rulelonglong_type=rulelonglong_type
	{ $current=$iv_rulelonglong_type.current.getText(); }
	EOF;

// Rule longlong_type
rulelonglong_type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLonglong_typeAccess().getLongKeyword_0());
		}
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLonglong_typeAccess().getLongKeyword_1());
		}
	)
;

// Entry rule entryRuleushort_type
entryRuleushort_type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUshort_typeRule()); }
	iv_ruleushort_type=ruleushort_type
	{ $current=$iv_ruleushort_type.current.getText(); }
	EOF;

// Rule ushort_type
ruleushort_type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='unsigned'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUshort_typeAccess().getUnsignedKeyword_0());
		}
		kw='short'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUshort_typeAccess().getShortKeyword_1());
		}
	)
;

// Entry rule entryRuleulong_type
entryRuleulong_type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUlong_typeRule()); }
	iv_ruleulong_type=ruleulong_type
	{ $current=$iv_ruleulong_type.current.getText(); }
	EOF;

// Rule ulong_type
ruleulong_type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='unsigned'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUlong_typeAccess().getUnsignedKeyword_0());
		}
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUlong_typeAccess().getLongKeyword_1());
		}
	)
;

// Entry rule entryRuleulonglong_type
entryRuleulonglong_type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUlonglong_typeRule()); }
	iv_ruleulonglong_type=ruleulonglong_type
	{ $current=$iv_ruleulonglong_type.current.getText(); }
	EOF;

// Rule ulonglong_type
ruleulonglong_type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='unsigned'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUlonglong_typeAccess().getUnsignedKeyword_0());
		}
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUlonglong_typeAccess().getLongKeyword_1());
		}
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUlonglong_typeAccess().getLongKeyword_2());
		}
	)
;

// Entry rule entryRulecharstr_type
entryRulecharstr_type returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharstr_typeRule()); }
	iv_rulecharstr_type=rulecharstr_type
	{ $current=$iv_rulecharstr_type.current; }
	EOF;

// Rule charstr_type
rulecharstr_type returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCharstr_typeAccess().getKindChar_typeEnumRuleCall_0_0());
				}
				lv_kind_0_0=rulechar_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharstr_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"iot.simpleexpressions.xtext.IoT.char_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCharstr_typeAccess().getKindWide_char_typeEnumRuleCall_1_0());
				}
				lv_kind_1_0=rulewide_char_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharstr_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"iot.simpleexpressions.xtext.IoT.wide_char_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCharstr_typeAccess().getKindString_typeEnumRuleCall_2_0());
				}
				lv_kind_2_0=rulestring_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharstr_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_2_0,
						"iot.simpleexpressions.xtext.IoT.string_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCharstr_typeAccess().getKindWide_string_typeEnumRuleCall_3_0());
				}
				lv_kind_3_0=rulewide_string_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharstr_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_3_0,
						"iot.simpleexpressions.xtext.IoT.wide_string_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleother_type
entryRuleother_type returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOther_typeRule()); }
	iv_ruleother_type=ruleother_type
	{ $current=$iv_ruleother_type.current; }
	EOF;

// Rule other_type
ruleother_type returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOther_typeAccess().getKindBoolean_typeEnumRuleCall_0_0());
				}
				lv_kind_0_0=ruleboolean_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOther_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"iot.simpleexpressions.xtext.IoT.boolean_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOther_typeAccess().getKindOctet_typeEnumRuleCall_1_0());
				}
				lv_kind_1_0=ruleoctet_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOther_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"iot.simpleexpressions.xtext.IoT.octet_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOther_typeAccess().getKindAny_typeEnumRuleCall_2_0());
				}
				lv_kind_2_0=ruleany_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOther_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_2_0,
						"iot.simpleexpressions.xtext.IoT.any_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockAccess().getBlockAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getStmtsStatementParserRuleCall_1_0());
				}
				lv_stmts_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					add(
						$current,
						"stmts",
						lv_stmts_1_0,
						"iot.simpleexpressions.xtext.IoT.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getPrintParserRuleCall_0());
		}
		this_Print_0=rulePrint
		{
			$current = $this_Print_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getAssignParserRuleCall_1());
		}
		this_Assign_1=ruleAssign
		{
			$current = $this_Assign_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfStmtParserRuleCall_2());
		}
		this_IfStmt_2=ruleIfStmt
		{
			$current = $this_IfStmt_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrint
entryRulePrint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintRule()); }
	iv_rulePrint=rulePrint
	{ $current=$iv_rulePrint.current; }
	EOF;

// Rule Print
rulePrint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrintAccess().getPrintAction_0(),
					$current);
			}
		)
		otherlv_1='println'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrintAccess().getPrintlnKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getPrintAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getPrintAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrintRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getPrintAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAssign
entryRuleAssign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignRule()); }
	iv_ruleAssign=ruleAssign
	{ $current=$iv_ruleAssign.current; }
	EOF;

// Rule Assign
ruleAssign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAssignAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignAccess().getValASPlusParserRuleCall_2_0());
				}
				lv_val_2_0=ruleASPlus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignRule());
					}
					set(
						$current,
						"val",
						lv_val_2_0,
						"iot.simpleexpressions.xtext.IoT.ASPlus");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIfStmt
entryRuleIfStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtRule()); }
	iv_ruleIfStmt=ruleIfStmt
	{ $current=$iv_ruleIfStmt.current; }
	EOF;

// Rule IfStmt
ruleIfStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getTestEqualityTestParserRuleCall_2_0());
				}
				lv_test_2_0=ruleEqualityTest
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"test",
						lv_test_2_0,
						"iot.simpleexpressions.xtext.IoT.EqualityTest");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='then'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfStmtAccess().getThenKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getIfBranchAssignParserRuleCall_5_0());
				}
				lv_ifBranch_5_0=ruleAssign
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"ifBranch",
						lv_ifBranch_5_0,
						"iot.simpleexpressions.xtext.IoT.Assign");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='else'
			{
				newLeafNode(otherlv_6, grammarAccess.getIfStmtAccess().getElseKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getElseBranchAssignParserRuleCall_6_1_0());
					}
					lv_elseBranch_7_0=ruleAssign
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRule());
						}
						set(
							$current,
							"elseBranch",
							lv_elseBranch_7_0,
							"iot.simpleexpressions.xtext.IoT.Assign");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='end'
		{
			newLeafNode(otherlv_8, grammarAccess.getIfStmtAccess().getEndKeyword_7());
		}
	)
;

// Entry rule entryRuleEqualityTest
entryRuleEqualityTest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityTestRule()); }
	iv_ruleEqualityTest=ruleEqualityTest
	{ $current=$iv_ruleEqualityTest.current; }
	EOF;

// Rule EqualityTest
ruleEqualityTest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEqualityTestAccess().getLhsASPlusParserRuleCall_0_0());
				}
				lv_lhs_0_0=ruleASPlus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqualityTestRule());
					}
					set(
						$current,
						"lhs",
						lv_lhs_0_0,
						"iot.simpleexpressions.xtext.IoT.ASPlus");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='=='
		{
			newLeafNode(otherlv_1, grammarAccess.getEqualityTestAccess().getEqualsSignEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEqualityTestAccess().getRhsASPlusParserRuleCall_2_0());
				}
				lv_rhs_2_0=ruleASPlus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqualityTestRule());
					}
					set(
						$current,
						"rhs",
						lv_rhs_2_0,
						"iot.simpleexpressions.xtext.IoT.ASPlus");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleASPlus
entryRuleASPlus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getASPlusRule()); }
	iv_ruleASPlus=ruleASPlus
	{ $current=$iv_ruleASPlus.current; }
	EOF;

// Rule ASPlus
ruleASPlus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getASPlusAccess().getASMinusParserRuleCall_0());
		}
		this_ASMinus_0=ruleASMinus
		{
			$current = $this_ASMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getASPlusAccess().getArithPlusLhsAction_1_0(),
						$current);
				}
			)
			otherlv_2='+'
			{
				newLeafNode(otherlv_2, grammarAccess.getASPlusAccess().getPlusSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getASPlusAccess().getRhsArithParserRuleCall_1_2_0());
					}
					lv_rhs_3_0=ruleArith
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getASPlusRule());
						}
						set(
							$current,
							"rhs",
							lv_rhs_3_0,
							"iot.simpleexpressions.xtext.IoT.Arith");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleASMinus
entryRuleASMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getASMinusRule()); }
	iv_ruleASMinus=ruleASMinus
	{ $current=$iv_ruleASMinus.current; }
	EOF;

// Rule ASMinus
ruleASMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getASMinusAccess().getArithParserRuleCall_0());
		}
		this_Arith_0=ruleArith
		{
			$current = $this_Arith_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getASMinusAccess().getArithMinusLhsAction_1_0(),
						$current);
				}
			)
			otherlv_2='-'
			{
				newLeafNode(otherlv_2, grammarAccess.getASMinusAccess().getHyphenMinusKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getASMinusAccess().getRhsArithParserRuleCall_1_2_0());
					}
					lv_rhs_3_0=ruleArith
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getASMinusRule());
						}
						set(
							$current,
							"rhs",
							lv_rhs_3_0,
							"iot.simpleexpressions.xtext.IoT.Arith");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleArith
entryRuleArith returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithRule()); }
	iv_ruleArith=ruleArith
	{ $current=$iv_ruleArith.current; }
	EOF;

// Rule Arith
ruleArith returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getArithAccess().getALLitParserRuleCall_0());
		}
		this_ALLit_0=ruleALLit
		{
			$current = $this_ALLit_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getArithAccess().getVarRefParserRuleCall_1());
		}
		this_VarRef_1=ruleVarRef
		{
			$current = $this_VarRef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getArithAccess().getRandParserRuleCall_2());
		}
		this_Rand_2=ruleRand
		{
			$current = $this_Rand_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getArithAccess().getParenthesisParserRuleCall_3());
		}
		this_Parenthesis_3=ruleParenthesis
		{
			$current = $this_Parenthesis_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParenthesis
entryRuleParenthesis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesisRule()); }
	iv_ruleParenthesis=ruleParenthesis
	{ $current=$iv_ruleParenthesis.current; }
	EOF;

// Rule Parenthesis
ruleParenthesis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getParenthesisAccess().getASPlusParserRuleCall_1());
		}
		this_ASPlus_1=ruleASPlus
		{
			$current = $this_ASPlus_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleALLit
entryRuleALLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getALLitRule()); }
	iv_ruleALLit=ruleALLit
	{ $current=$iv_ruleALLit.current; }
	EOF;

// Rule ALLit
ruleALLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getALLitAccess().getArithLitAction_0(),
					$current);
			}
		)
		(
			(
				lv_val_1_0=RULE_INTEGER
				{
					newLeafNode(lv_val_1_0, grammarAccess.getALLitAccess().getValINTEGERTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getALLitRule());
					}
					setWithLastConsumed(
						$current,
						"val",
						lv_val_1_0,
						"iot.simpleexpressions.xtext.IoT.INTEGER");
				}
			)
		)
	)
;

// Entry rule entryRuleVarRef
entryRuleVarRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarRefRule()); }
	iv_ruleVarRef=ruleVarRef
	{ $current=$iv_ruleVarRef.current; }
	EOF;

// Rule VarRef
ruleVarRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getVarRefAccess().getALVarRefAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVarRefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarRefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRand
entryRuleRand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRandRule()); }
	iv_ruleRand=ruleRand
	{ $current=$iv_ruleRand.current; }
	EOF;

// Rule Rand
ruleRand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rand'
		{
			newLeafNode(otherlv_0, grammarAccess.getRandAccess().getRandKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRandAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_min_2_0=RULE_INTEGER
				{
					newLeafNode(lv_min_2_0, grammarAccess.getRandAccess().getMinINTEGERTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRandRule());
					}
					setWithLastConsumed(
						$current,
						"min",
						lv_min_2_0,
						"iot.simpleexpressions.xtext.IoT.INTEGER");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getRandAccess().getCommaKeyword_3());
		}
		(
			(
				lv_max_4_0=RULE_INTEGER
				{
					newLeafNode(lv_max_4_0, grammarAccess.getRandAccess().getMaxINTEGERTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRandRule());
					}
					setWithLastConsumed(
						$current,
						"max",
						lv_max_4_0,
						"iot.simpleexpressions.xtext.IoT.INTEGER");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getRandAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleIotActivity
entryRuleIotActivity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIotActivityRule()); }
	iv_ruleIotActivity=ruleIotActivity
	{ $current=$iv_ruleIotActivity.current; }
	EOF;

// Rule IotActivity
ruleIotActivity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIotActivityAccess().getIoTActivityBindActivityAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIotActivityAccess().getDelegateActivityParserRuleCall_1_0());
				}
				lv_delegate_1_0=ruleActivity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIotActivityRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_1_0,
						"iot.simpleexpressions.xtext.IoT.Activity");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleActivity
entryRuleActivity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityRule()); }
	iv_ruleActivity=ruleActivity
	{ $current=$iv_ruleActivity.current; }
	EOF;

// Rule Activity
ruleActivity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivityAccess().getActivityAction_0(),
					$current);
			}
		)
		otherlv_1='activity'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityAccess().getActivityKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getActivityAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getActivityAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityAccess().getInputsVariableParserRuleCall_3_1_0());
					}
					lv_inputs_4_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_4_0,
							"iot.simpleexpressions.xtext.IoT.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getActivityAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityAccess().getInputsVariableParserRuleCall_3_2_1_0());
						}
						lv_inputs_6_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityRule());
							}
							add(
								$current,
								"inputs",
								lv_inputs_6_0,
								"iot.simpleexpressions.xtext.IoT.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getActivityAccess().getRightParenthesisKeyword_3_3());
			}
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityAccess().getLocalsVariableParserRuleCall_5_0_0());
					}
					lv_locals_9_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityRule());
						}
						add(
							$current,
							"locals",
							lv_locals_9_0,
							"iot.simpleexpressions.xtext.IoT.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getActivityAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityAccess().getLocalsVariableParserRuleCall_5_1_1_0());
						}
						lv_locals_11_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityRule());
							}
							add(
								$current,
								"locals",
								lv_locals_11_0,
								"iot.simpleexpressions.xtext.IoT.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_12='nodes'
			{
				newLeafNode(otherlv_12, grammarAccess.getActivityAccess().getNodesKeyword_6_0());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityAccess().getNodesActivityNodeParserRuleCall_6_2_0());
					}
					lv_nodes_14_0=ruleActivityNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_14_0,
							"iot.simpleexpressions.xtext.IoT.ActivityNode");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getActivityAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityAccess().getNodesActivityNodeParserRuleCall_6_3_1_0());
						}
						lv_nodes_16_0=ruleActivityNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityRule());
							}
							add(
								$current,
								"nodes",
								lv_nodes_16_0,
								"iot.simpleexpressions.xtext.IoT.ActivityNode");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_18='edges'
			{
				newLeafNode(otherlv_18, grammarAccess.getActivityAccess().getEdgesKeyword_7_0());
			}
			otherlv_19='{'
			{
				newLeafNode(otherlv_19, grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityAccess().getEdgesActivityEdgeParserRuleCall_7_2_0());
					}
					lv_edges_20_0=ruleActivityEdge
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityRule());
						}
						add(
							$current,
							"edges",
							lv_edges_20_0,
							"iot.simpleexpressions.xtext.IoT.ActivityEdge");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_21=','
				{
					newLeafNode(otherlv_21, grammarAccess.getActivityAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityAccess().getEdgesActivityEdgeParserRuleCall_7_3_1_0());
						}
						lv_edges_22_0=ruleActivityEdge
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityRule());
							}
							add(
								$current,
								"edges",
								lv_edges_22_0,
								"iot.simpleexpressions.xtext.IoT.ActivityEdge");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_23='}'
			{
				newLeafNode(otherlv_23, grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_24='}'
		{
			newLeafNode(otherlv_24, grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleActivityNode
entryRuleActivityNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityNodeRule()); }
	iv_ruleActivityNode=ruleActivityNode
	{ $current=$iv_ruleActivityNode.current; }
	EOF;

// Rule ActivityNode
ruleActivityNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getOpaqueActionParserRuleCall_0());
		}
		this_OpaqueAction_0=ruleOpaqueAction
		{
			$current = $this_OpaqueAction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getInitialNodeParserRuleCall_1());
		}
		this_InitialNode_1=ruleInitialNode
		{
			$current = $this_InitialNode_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getActivityFinalNodeParserRuleCall_2());
		}
		this_ActivityFinalNode_2=ruleActivityFinalNode
		{
			$current = $this_ActivityFinalNode_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getForkNodeParserRuleCall_3());
		}
		this_ForkNode_3=ruleForkNode
		{
			$current = $this_ForkNode_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getJoinNodeParserRuleCall_4());
		}
		this_JoinNode_4=ruleJoinNode
		{
			$current = $this_JoinNode_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getMergeNodeParserRuleCall_5());
		}
		this_MergeNode_5=ruleMergeNode
		{
			$current = $this_MergeNode_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getDecisionNodeParserRuleCall_6());
		}
		this_DecisionNode_6=ruleDecisionNode
		{
			$current = $this_DecisionNode_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleActivityEdge
entryRuleActivityEdge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityEdgeRule()); }
	iv_ruleActivityEdge=ruleActivityEdge
	{ $current=$iv_ruleActivityEdge.current; }
	EOF;

// Rule ActivityEdge
ruleActivityEdge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getActivityEdgeAccess().getControlFlowParserRuleCall());
	}
	this_ControlFlow_0=ruleControlFlow
	{
		$current = $this_ControlFlow_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableAccess().getIntegerVariableParserRuleCall_0());
		}
		this_IntegerVariable_0=ruleIntegerVariable
		{
			$current = $this_IntegerVariable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableAccess().getBooleanVariableParserRuleCall_1());
		}
		this_BooleanVariable_1=ruleBooleanVariable
		{
			$current = $this_BooleanVariable_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOpaqueAction
entryRuleOpaqueAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpaqueActionRule()); }
	iv_ruleOpaqueAction=ruleOpaqueAction
	{ $current=$iv_ruleOpaqueAction.current; }
	EOF;

// Rule OpaqueAction
ruleOpaqueAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getOpaqueActionAccess().getOpaqueActionAction_0(),
					$current);
			}
		)
		otherlv_1='action'
		{
			newLeafNode(otherlv_1, grammarAccess.getOpaqueActionAccess().getActionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOpaqueActionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOpaqueActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='comp'
			{
				newLeafNode(otherlv_3, grammarAccess.getOpaqueActionAccess().getCompKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getOpaqueActionAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOpaqueActionAccess().getExpressionsExpBindStatementParserRuleCall_3_2_0());
					}
					lv_expressions_5_0=ruleExpBindStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOpaqueActionRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_5_0,
							"iot.simpleexpressions.xtext.IoT.ExpBindStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getOpaqueActionAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOpaqueActionAccess().getExpressionsExpBindStatementParserRuleCall_3_3_1_0());
						}
						lv_expressions_7_0=ruleExpBindStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOpaqueActionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_7_0,
								"iot.simpleexpressions.xtext.IoT.ExpBindStatement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getOpaqueActionAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='in'
			{
				newLeafNode(otherlv_9, grammarAccess.getOpaqueActionAccess().getInKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getOpaqueActionAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpaqueActionRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getOpaqueActionAccess().getIncomingActivityEdgeCrossReference_4_2_0());
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getOpaqueActionAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOpaqueActionRule());
							}
						}
						otherlv_13=RULE_ID
						{
							newLeafNode(otherlv_13, grammarAccess.getOpaqueActionAccess().getIncomingActivityEdgeCrossReference_4_3_1_0());
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getOpaqueActionAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_15='out'
			{
				newLeafNode(otherlv_15, grammarAccess.getOpaqueActionAccess().getOutKeyword_5_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getOpaqueActionAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpaqueActionRule());
						}
					}
					otherlv_17=RULE_ID
					{
						newLeafNode(otherlv_17, grammarAccess.getOpaqueActionAccess().getOutgoingActivityEdgeCrossReference_5_2_0());
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getOpaqueActionAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOpaqueActionRule());
							}
						}
						otherlv_19=RULE_ID
						{
							newLeafNode(otherlv_19, grammarAccess.getOpaqueActionAccess().getOutgoingActivityEdgeCrossReference_5_3_1_0());
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getOpaqueActionAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_21='service'
			{
				newLeafNode(otherlv_21, grammarAccess.getOpaqueActionAccess().getServiceKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOpaqueActionAccess().getExpressionsExpBindOpDefParserRuleCall_6_1_0());
					}
					lv_expressions_22_0=ruleExpBindOpDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOpaqueActionRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_22_0,
							"iot.simpleexpressions.xtext.IoT.ExpBindOpDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpBindOpDef
entryRuleExpBindOpDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpBindOpDefRule()); }
	iv_ruleExpBindOpDef=ruleExpBindOpDef
	{ $current=$iv_ruleExpBindOpDef.current; }
	EOF;

// Rule ExpBindOpDef
ruleExpBindOpDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpBindOpDefAccess().getExpressionBindOperationDefAction_0(),
					$current);
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpBindOpDefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getExpBindOpDefAccess().getDelegateOperationDefCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleExpBindStatement
entryRuleExpBindStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpBindStatementRule()); }
	iv_ruleExpBindStatement=ruleExpBindStatement
	{ $current=$iv_ruleExpBindStatement.current; }
	EOF;

// Rule ExpBindStatement
ruleExpBindStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpBindStatementAccess().getExpressionBindSEExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpBindStatementAccess().getDelegateExpressionParserRuleCall_1_0());
				}
				lv_delegate_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpBindStatementRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_1_0,
						"iot.simpleexpressions.xtext.IoT.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getIntegerCalculationExpressionParserRuleCall_0());
		}
		this_IntegerCalculationExpression_0=ruleIntegerCalculationExpression
		{
			$current = $this_IntegerCalculationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getIntegerComparisonExpressionParserRuleCall_1());
		}
		this_IntegerComparisonExpression_1=ruleIntegerComparisonExpression
		{
			$current = $this_IntegerComparisonExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getBooleanUnaryExpressionParserRuleCall_2());
		}
		this_BooleanUnaryExpression_2=ruleBooleanUnaryExpression
		{
			$current = $this_BooleanUnaryExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getBooleanBinaryExpressionParserRuleCall_3());
		}
		this_BooleanBinaryExpression_3=ruleBooleanBinaryExpression
		{
			$current = $this_BooleanBinaryExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntegerCalculationExpression
entryRuleIntegerCalculationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerCalculationExpressionRule()); }
	iv_ruleIntegerCalculationExpression=ruleIntegerCalculationExpression
	{ $current=$iv_ruleIntegerCalculationExpression.current; }
	EOF;

// Rule IntegerCalculationExpression
ruleIntegerCalculationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerCalculationExpressionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getIntegerCalculationExpressionAccess().getAssigneeSEIntegerVariableCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getIntegerCalculationExpressionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerCalculationExpressionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getIntegerCalculationExpressionAccess().getOperand1SEIntegerVariableCrossReference_2_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerCalculationExpressionAccess().getOperatorIntegerCalculationOperatorEnumRuleCall_3_0());
				}
				lv_operator_3_0=ruleIntegerCalculationOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerCalculationExpressionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_3_0,
						"iot.simpleexpressions.xtext.IoT.IntegerCalculationOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerCalculationExpressionRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getIntegerCalculationExpressionAccess().getOperand2SEIntegerVariableCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleIntegerComparisonExpression
entryRuleIntegerComparisonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerComparisonExpressionRule()); }
	iv_ruleIntegerComparisonExpression=ruleIntegerComparisonExpression
	{ $current=$iv_ruleIntegerComparisonExpression.current; }
	EOF;

// Rule IntegerComparisonExpression
ruleIntegerComparisonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerComparisonExpressionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getIntegerComparisonExpressionAccess().getAssigneeSEBooleanVariableCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getIntegerComparisonExpressionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerComparisonExpressionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getIntegerComparisonExpressionAccess().getOperand1SEIntegerVariableCrossReference_2_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerComparisonExpressionAccess().getOperatorIntegerComparisonOperatorEnumRuleCall_3_0());
				}
				lv_operator_3_0=ruleIntegerComparisonOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerComparisonExpressionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_3_0,
						"iot.simpleexpressions.xtext.IoT.IntegerComparisonOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerComparisonExpressionRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getIntegerComparisonExpressionAccess().getOperand2SEIntegerVariableCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanUnaryExpression
entryRuleBooleanUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanUnaryExpressionRule()); }
	iv_ruleBooleanUnaryExpression=ruleBooleanUnaryExpression
	{ $current=$iv_ruleBooleanUnaryExpression.current; }
	EOF;

// Rule BooleanUnaryExpression
ruleBooleanUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanUnaryExpressionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getBooleanUnaryExpressionAccess().getAssigneeSEBooleanVariableCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanUnaryExpressionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanUnaryExpressionAccess().getOperatorBooleanUnaryOperatorEnumRuleCall_2_0());
				}
				lv_operator_2_0=ruleBooleanUnaryOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanUnaryExpressionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_2_0,
						"iot.simpleexpressions.xtext.IoT.BooleanUnaryOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanUnaryExpressionRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getBooleanUnaryExpressionAccess().getOperandSEBooleanVariableCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanBinaryExpression
entryRuleBooleanBinaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanBinaryExpressionRule()); }
	iv_ruleBooleanBinaryExpression=ruleBooleanBinaryExpression
	{ $current=$iv_ruleBooleanBinaryExpression.current; }
	EOF;

// Rule BooleanBinaryExpression
ruleBooleanBinaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanBinaryExpressionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getBooleanBinaryExpressionAccess().getAssigneeSEBooleanVariableCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanBinaryExpressionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanBinaryExpressionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getBooleanBinaryExpressionAccess().getOperand1SEBooleanVariableCrossReference_2_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanBinaryExpressionAccess().getOperatorBooleanBinaryOperatorEnumRuleCall_3_0());
				}
				lv_operator_3_0=ruleBooleanBinaryOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanBinaryExpressionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_3_0,
						"iot.simpleexpressions.xtext.IoT.BooleanBinaryOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanBinaryExpressionRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getBooleanBinaryExpressionAccess().getOperand2SEBooleanVariableCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleInitialNode
entryRuleInitialNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialNodeRule()); }
	iv_ruleInitialNode=ruleInitialNode
	{ $current=$iv_ruleInitialNode.current; }
	EOF;

// Rule InitialNode
ruleInitialNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getInitialNodeAccess().getInitialNodeAction_0(),
					$current);
			}
		)
		otherlv_1='initial'
		{
			newLeafNode(otherlv_1, grammarAccess.getInitialNodeAccess().getInitialKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getInitialNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitialNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='out'
			{
				newLeafNode(otherlv_3, grammarAccess.getInitialNodeAccess().getOutKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getInitialNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInitialNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getInitialNodeAccess().getOutgoingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getInitialNodeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getInitialNodeRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getInitialNodeAccess().getOutgoingActivityEdgeCrossReference_3_3_1_0());
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getInitialNodeAccess().getRightParenthesisKeyword_3_4());
			}
		)
	)
;

// Entry rule entryRuleActivityFinalNode
entryRuleActivityFinalNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityFinalNodeRule()); }
	iv_ruleActivityFinalNode=ruleActivityFinalNode
	{ $current=$iv_ruleActivityFinalNode.current; }
	EOF;

// Rule ActivityFinalNode
ruleActivityFinalNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivityFinalNodeAccess().getActivityFinalNodeAction_0(),
					$current);
			}
		)
		otherlv_1='final'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityFinalNodeAccess().getFinalKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getActivityFinalNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivityFinalNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getActivityFinalNodeAccess().getInKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getActivityFinalNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActivityFinalNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getActivityFinalNodeAccess().getIncomingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getActivityFinalNodeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActivityFinalNodeRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getActivityFinalNodeAccess().getIncomingActivityEdgeCrossReference_3_3_1_0());
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getActivityFinalNodeAccess().getRightParenthesisKeyword_3_4());
			}
		)
	)
;

// Entry rule entryRuleForkNode
entryRuleForkNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForkNodeRule()); }
	iv_ruleForkNode=ruleForkNode
	{ $current=$iv_ruleForkNode.current; }
	EOF;

// Rule ForkNode
ruleForkNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getForkNodeAccess().getForkNodeAction_0(),
					$current);
			}
		)
		otherlv_1='fork'
		{
			newLeafNode(otherlv_1, grammarAccess.getForkNodeAccess().getForkKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getForkNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForkNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getForkNodeAccess().getInKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getForkNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getForkNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getForkNodeAccess().getIncomingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getForkNodeAccess().getRightParenthesisKeyword_3_3());
			}
		)
		(
			otherlv_7='out'
			{
				newLeafNode(otherlv_7, grammarAccess.getForkNodeAccess().getOutKeyword_4_0());
			}
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getForkNodeAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getForkNodeRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getForkNodeAccess().getOutgoingActivityEdgeCrossReference_4_2_0());
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getForkNodeAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getForkNodeRule());
							}
						}
						otherlv_11=RULE_ID
						{
							newLeafNode(otherlv_11, grammarAccess.getForkNodeAccess().getOutgoingActivityEdgeCrossReference_4_3_1_0());
						}
					)
				)
			)*
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getForkNodeAccess().getRightParenthesisKeyword_4_4());
			}
		)?
	)
;

// Entry rule entryRuleJoinNode
entryRuleJoinNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJoinNodeRule()); }
	iv_ruleJoinNode=ruleJoinNode
	{ $current=$iv_ruleJoinNode.current; }
	EOF;

// Rule JoinNode
ruleJoinNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getJoinNodeAccess().getJoinNodeAction_0(),
					$current);
			}
		)
		otherlv_1='join'
		{
			newLeafNode(otherlv_1, grammarAccess.getJoinNodeAccess().getJoinKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getJoinNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJoinNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getJoinNodeAccess().getInKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getJoinNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJoinNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getJoinNodeAccess().getIncomingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getJoinNodeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getJoinNodeRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getJoinNodeAccess().getIncomingActivityEdgeCrossReference_3_3_1_0());
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getJoinNodeAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='out'
			{
				newLeafNode(otherlv_9, grammarAccess.getJoinNodeAccess().getOutKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getJoinNodeAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJoinNodeRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getJoinNodeAccess().getOutgoingActivityEdgeCrossReference_4_2_0());
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getJoinNodeAccess().getRightParenthesisKeyword_4_3());
			}
		)
	)
;

// Entry rule entryRuleMergeNode
entryRuleMergeNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMergeNodeRule()); }
	iv_ruleMergeNode=ruleMergeNode
	{ $current=$iv_ruleMergeNode.current; }
	EOF;

// Rule MergeNode
ruleMergeNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMergeNodeAccess().getMergeNodeAction_0(),
					$current);
			}
		)
		otherlv_1='merge'
		{
			newLeafNode(otherlv_1, grammarAccess.getMergeNodeAccess().getMergeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMergeNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMergeNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getMergeNodeAccess().getInKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getMergeNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMergeNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getMergeNodeAccess().getIncomingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getMergeNodeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMergeNodeRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getMergeNodeAccess().getIncomingActivityEdgeCrossReference_3_3_1_0());
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getMergeNodeAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='out'
			{
				newLeafNode(otherlv_9, grammarAccess.getMergeNodeAccess().getOutKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getMergeNodeAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMergeNodeRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getMergeNodeAccess().getOutgoingActivityEdgeCrossReference_4_2_0());
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getMergeNodeAccess().getRightParenthesisKeyword_4_3());
			}
		)
	)
;

// Entry rule entryRuleDecisionNode
entryRuleDecisionNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecisionNodeRule()); }
	iv_ruleDecisionNode=ruleDecisionNode
	{ $current=$iv_ruleDecisionNode.current; }
	EOF;

// Rule DecisionNode
ruleDecisionNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getDecisionNodeAccess().getDecisionNodeAction_0(),
					$current);
			}
		)
		otherlv_1='decision'
		{
			newLeafNode(otherlv_1, grammarAccess.getDecisionNodeAccess().getDecisionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDecisionNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDecisionNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getDecisionNodeAccess().getInKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getDecisionNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDecisionNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getDecisionNodeAccess().getIncomingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getDecisionNodeAccess().getRightParenthesisKeyword_3_3());
			}
		)
		(
			otherlv_7='out'
			{
				newLeafNode(otherlv_7, grammarAccess.getDecisionNodeAccess().getOutKeyword_4_0());
			}
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getDecisionNodeAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDecisionNodeRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getDecisionNodeAccess().getOutgoingActivityEdgeCrossReference_4_2_0());
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getDecisionNodeAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDecisionNodeRule());
							}
						}
						otherlv_11=RULE_ID
						{
							newLeafNode(otherlv_11, grammarAccess.getDecisionNodeAccess().getOutgoingActivityEdgeCrossReference_4_3_1_0());
						}
					)
				)
			)*
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getDecisionNodeAccess().getRightParenthesisKeyword_4_4());
			}
		)?
	)
;

// Entry rule entryRuleIntegerVariable
entryRuleIntegerVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerVariableRule()); }
	iv_ruleIntegerVariable=ruleIntegerVariable
	{ $current=$iv_ruleIntegerVariable.current; }
	EOF;

// Rule IntegerVariable
ruleIntegerVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntegerVariableAccess().getIntegerVariableBindSEIntegerVariableAction_0(),
					$current);
			}
		)
		otherlv_1='int'
		{
			newLeafNode(otherlv_1, grammarAccess.getIntegerVariableAccess().getIntKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerVariableAccess().getDelegateIntegerVariableDeclParserRuleCall_2_0());
				}
				lv_delegate_2_0=ruleIntegerVariableDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerVariableRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_2_0,
						"iot.simpleexpressions.xtext.IoT.IntegerVariableDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanVariable
entryRuleBooleanVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanVariableRule()); }
	iv_ruleBooleanVariable=ruleBooleanVariable
	{ $current=$iv_ruleBooleanVariable.current; }
	EOF;

// Rule BooleanVariable
ruleBooleanVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanVariableAccess().getBooleanVariableBindSEBooleanVariableAction_0(),
					$current);
			}
		)
		otherlv_1='bool'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanVariableAccess().getBoolKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanVariableAccess().getDelegateBooleanVariableDeclParserRuleCall_2_0());
				}
				lv_delegate_2_0=ruleBooleanVariableDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanVariableRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_2_0,
						"iot.simpleexpressions.xtext.IoT.BooleanVariableDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanVariableDecl
entryRuleBooleanVariableDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanVariableDeclRule()); }
	iv_ruleBooleanVariableDecl=ruleBooleanVariableDecl
	{ $current=$iv_ruleBooleanVariableDecl.current; }
	EOF;

// Rule BooleanVariableDecl
ruleBooleanVariableDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getBooleanVariableDeclAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanVariableDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanVariableDeclAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanVariableDeclAccess().getInitialValueBooleanValueParserRuleCall_2_0());
				}
				lv_initialValue_2_0=ruleBooleanValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanVariableDeclRule());
					}
					set(
						$current,
						"initialValue",
						lv_initialValue_2_0,
						"iot.simpleexpressions.xtext.IoT.BooleanValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIntegerVariableDecl
entryRuleIntegerVariableDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerVariableDeclRule()); }
	iv_ruleIntegerVariableDecl=ruleIntegerVariableDecl
	{ $current=$iv_ruleIntegerVariableDecl.current; }
	EOF;

// Rule IntegerVariableDecl
ruleIntegerVariableDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getIntegerVariableDeclAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerVariableDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getIntegerVariableDeclAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerVariableDeclAccess().getInitialValueIntegerValueParserRuleCall_2_0());
				}
				lv_initialValue_2_0=ruleIntegerValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerVariableDeclRule());
					}
					set(
						$current,
						"initialValue",
						lv_initialValue_2_0,
						"iot.simpleexpressions.xtext.IoT.IntegerValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	iv_ruleBooleanValue=ruleBooleanValue
	{ $current=$iv_ruleBooleanValue.current; }
	EOF;

// Rule BooleanValue
ruleBooleanValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanValueAccess().getSEBooleanValueAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_value_1_0='true'
					{
						newLeafNode(lv_value_1_0, grammarAccess.getBooleanValueAccess().getValueTrueKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanValueRule());
						}
						setWithLastConsumed($current, "value", true, "true");
					}
				)
			)
			    |
			otherlv_2='false'
			{
				newLeafNode(otherlv_2, grammarAccess.getBooleanValueAccess().getFalseKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleIntegerValue
entryRuleIntegerValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerValueRule()); }
	iv_ruleIntegerValue=ruleIntegerValue
	{ $current=$iv_ruleIntegerValue.current; }
	EOF;

// Rule IntegerValue
ruleIntegerValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntegerValueAccess().getSEIntegerValueAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_INTEGER
				{
					newLeafNode(lv_value_1_0, grammarAccess.getIntegerValueAccess().getValueINTEGERTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerValueRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"iot.simpleexpressions.xtext.IoT.INTEGER");
				}
			)
		)
	)
;

// Entry rule entryRuleControlFlow
entryRuleControlFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlFlowRule()); }
	iv_ruleControlFlow=ruleControlFlow
	{ $current=$iv_ruleControlFlow.current; }
	EOF;

// Rule ControlFlow
ruleControlFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='flow'
		{
			newLeafNode(otherlv_0, grammarAccess.getControlFlowAccess().getFlowKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getControlFlowAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlFlowRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getControlFlowAccess().getFromKeyword_2());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlFlowRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getControlFlowAccess().getSourceActivityNodeCrossReference_3_0());
				}
			)
		)
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getControlFlowAccess().getToKeyword_4());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlFlowRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getControlFlowAccess().getTargetActivityNodeCrossReference_5_0());
				}
			)
		)
		(
			otherlv_6='['
			{
				newLeafNode(otherlv_6, grammarAccess.getControlFlowAccess().getLeftSquareBracketKeyword_6_0());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getControlFlowRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getControlFlowAccess().getGuardBooleanVariableCrossReference_6_1_0());
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getControlFlowAccess().getRightSquareBracketKeyword_6_2());
			}
		)?
	)
;

// Rule BoardType
ruleBoardType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='RaspberryPi'
			{
				$current = grammarAccess.getBoardTypeAccess().getRaspberryPiEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBoardTypeAccess().getRaspberryPiEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Arduino'
			{
				$current = grammarAccess.getBoardTypeAccess().getArduinoEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBoardTypeAccess().getArduinoEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='BeagleBoard'
			{
				$current = grammarAccess.getBoardTypeAccess().getBeagleBoardEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBoardTypeAccess().getBeagleBoardEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule param_attribute
ruleparam_attribute returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getParam_attributeAccess().getPARAM_INEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getParam_attributeAccess().getPARAM_INEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getParam_attributeAccess().getPARAM_OUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getParam_attributeAccess().getPARAM_OUTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='inout'
			{
				$current = grammarAccess.getParam_attributeAccess().getPARAM_INOUTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getParam_attributeAccess().getPARAM_INOUTEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule float_type
rulefloat_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='float'
		{
			$current = grammarAccess.getFloat_typeAccess().getPK_FLOATEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getFloat_typeAccess().getPK_FLOATEnumLiteralDeclaration());
		}
	)
;

// Rule double_type
ruledouble_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='double'
		{
			$current = grammarAccess.getDouble_typeAccess().getPK_DOUBLEEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getDouble_typeAccess().getPK_DOUBLEEnumLiteralDeclaration());
		}
	)
;

// Rule short_type
ruleshort_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='short'
		{
			$current = grammarAccess.getShort_typeAccess().getPK_SHORTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getShort_typeAccess().getPK_SHORTEnumLiteralDeclaration());
		}
	)
;

// Rule long_type
rulelong_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='long'
		{
			$current = grammarAccess.getLong_typeAccess().getPK_LONGEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getLong_typeAccess().getPK_LONGEnumLiteralDeclaration());
		}
	)
;

// Rule char_type
rulechar_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='char'
		{
			$current = grammarAccess.getChar_typeAccess().getPK_CHAREnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getChar_typeAccess().getPK_CHAREnumLiteralDeclaration());
		}
	)
;

// Rule wide_char_type
rulewide_char_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='wchar'
		{
			$current = grammarAccess.getWide_char_typeAccess().getPK_WCHAREnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getWide_char_typeAccess().getPK_WCHAREnumLiteralDeclaration());
		}
	)
;

// Rule string_type
rulestring_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='string'
		{
			$current = grammarAccess.getString_typeAccess().getPK_STRINGEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getString_typeAccess().getPK_STRINGEnumLiteralDeclaration());
		}
	)
;

// Rule wide_string_type
rulewide_string_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='wstring'
		{
			$current = grammarAccess.getWide_string_typeAccess().getPK_WSTRINGEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getWide_string_typeAccess().getPK_WSTRINGEnumLiteralDeclaration());
		}
	)
;

// Rule boolean_type
ruleboolean_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='boolean'
		{
			$current = grammarAccess.getBoolean_typeAccess().getPK_BOOLEANEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBoolean_typeAccess().getPK_BOOLEANEnumLiteralDeclaration());
		}
	)
;

// Rule octet_type
ruleoctet_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='octet'
		{
			$current = grammarAccess.getOctet_typeAccess().getPK_OCTETEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getOctet_typeAccess().getPK_OCTETEnumLiteralDeclaration());
		}
	)
;

// Rule any_type
ruleany_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='any'
		{
			$current = grammarAccess.getAny_typeAccess().getPK_ANYEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getAny_typeAccess().getPK_ANYEnumLiteralDeclaration());
		}
	)
;

// Rule IntegerCalculationOperator
ruleIntegerCalculationOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='+'
			{
				$current = grammarAccess.getIntegerCalculationOperatorAccess().getADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIntegerCalculationOperatorAccess().getADDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getIntegerCalculationOperatorAccess().getSUBRACTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIntegerCalculationOperatorAccess().getSUBRACTEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule IntegerComparisonOperator
ruleIntegerComparisonOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<'
			{
				$current = grammarAccess.getIntegerComparisonOperatorAccess().getSMALLEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIntegerComparisonOperatorAccess().getSMALLEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<='
			{
				$current = grammarAccess.getIntegerComparisonOperatorAccess().getSMALLER_EQUALSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIntegerComparisonOperatorAccess().getSMALLER_EQUALSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='=='
			{
				$current = grammarAccess.getIntegerComparisonOperatorAccess().getEQUALSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getIntegerComparisonOperatorAccess().getEQUALSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='>='
			{
				$current = grammarAccess.getIntegerComparisonOperatorAccess().getGREATER_EQUALSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getIntegerComparisonOperatorAccess().getGREATER_EQUALSEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>'
			{
				$current = grammarAccess.getIntegerComparisonOperatorAccess().getGREATEREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getIntegerComparisonOperatorAccess().getGREATEREnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule BooleanUnaryOperator
ruleBooleanUnaryOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='!'
		{
			$current = grammarAccess.getBooleanUnaryOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBooleanUnaryOperatorAccess().getNOTEnumLiteralDeclaration());
		}
	)
;

// Rule BooleanBinaryOperator
ruleBooleanBinaryOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='&'
			{
				$current = grammarAccess.getBooleanBinaryOperatorAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBooleanBinaryOperatorAccess().getANDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='|'
			{
				$current = grammarAccess.getBooleanBinaryOperatorAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBooleanBinaryOperatorAccess().getOREnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_INTEGER : '-'? RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
