/*
 * generated by Xtext 2.12.0
 */
grammar InternalIotLuaXtext;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package iot.lua.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package iot.lua.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import iot.lua.xtext.services.IotLuaXtextGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private IotLuaXtextGrammarAccess grammarAccess;

    public InternalIotLuaXtextParser(TokenStream input, IotLuaXtextGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "System";
   	}

   	@Override
   	protected IotLuaXtextGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	iv_ruleSystem=ruleSystem
	{ $current=$iv_ruleSystem.current; }
	EOF;

// Rule System
ruleSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getComponentsHWComponentParserRuleCall_3_0_0());
					}
					lv_components_3_0=ruleHWComponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"components",
							lv_components_3_0,
							"iot.lua.xtext.IotLuaXtext.HWComponent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getComponentsHWComponentParserRuleCall_3_1_0());
					}
					lv_components_4_0=ruleHWComponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"components",
							lv_components_4_0,
							"iot.lua.xtext.IotLuaXtext.HWComponent");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getBoardsBoardParserRuleCall_4_0_0());
					}
					lv_boards_5_0=ruleBoard
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"boards",
							lv_boards_5_0,
							"iot.lua.xtext.IotLuaXtext.Board");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getBoardsBoardParserRuleCall_4_1_0());
					}
					lv_boards_6_0=ruleBoard
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"boards",
							lv_boards_6_0,
							"iot.lua.xtext.IotLuaXtext.Board");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getSketchSketchParserRuleCall_5_0());
				}
				lv_sketch_7_0=ruleSketch
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					set(
						$current,
						"sketch",
						lv_sketch_7_0,
						"iot.lua.xtext.IotLuaXtext.Sketch");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleHWComponent
entryRuleHWComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHWComponentRule()); }
	iv_ruleHWComponent=ruleHWComponent
	{ $current=$iv_ruleHWComponent.current; }
	EOF;

// Rule HWComponent
ruleHWComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getHWComponentAccess().getSensorParserRuleCall_0());
		}
		this_Sensor_0=ruleSensor
		{
			$current = $this_Sensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getHWComponentAccess().getActuatorParserRuleCall_1());
		}
		this_Actuator_1=ruleActuator
		{
			$current = $this_Actuator_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorAccess().getSensorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				otherlv_3='provides'
				{
					newLeafNode(otherlv_3, grammarAccess.getSensorAccess().getProvidesKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSensorAccess().getServicesIotOperationDefParserRuleCall_2_1_1_0());
						}
						lv_services_4_0=ruleIotOperationDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSensorRule());
							}
							add(
								$current,
								"services",
								lv_services_4_0,
								"iot.lua.xtext.IotLuaXtext.IotOperationDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	iv_ruleActuator=ruleActuator
	{ $current=$iv_ruleActuator.current; }
	EOF;

// Rule Actuator
ruleActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actuator'
		{
			newLeafNode(otherlv_0, grammarAccess.getActuatorAccess().getActuatorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActuatorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getActuatorAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				otherlv_3='provides'
				{
					newLeafNode(otherlv_3, grammarAccess.getActuatorAccess().getProvidesKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActuatorAccess().getServicesIotOperationDefParserRuleCall_2_1_1_0());
						}
						lv_services_4_0=ruleIotOperationDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActuatorRule());
							}
							add(
								$current,
								"services",
								lv_services_4_0,
								"iot.lua.xtext.IotLuaXtext.IotOperationDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getActuatorAccess().getRightCurlyBracketKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleBoard
entryRuleBoard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoardRule()); }
	iv_ruleBoard=ruleBoard
	{ $current=$iv_ruleBoard.current; }
	EOF;

// Rule Board
ruleBoard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoardAccess().getBoardAction_0(),
					$current);
			}
		)
		otherlv_1='board'
		{
			newLeafNode(otherlv_1, grammarAccess.getBoardAccess().getBoardKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getBoardAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoardRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getBoardAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoardAccess().getTypeBoardTypeEnumRuleCall_4_0());
				}
				lv_type_4_0=ruleBoardType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoardRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"iot.lua.xtext.IotLuaXtext.BoardType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getBoardAccess().getRightSquareBracketKeyword_5());
		}
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getBoardAccess().getLeftCurlyBracketKeyword_6_0());
			}
			(
				otherlv_7='provides'
				{
					newLeafNode(otherlv_7, grammarAccess.getBoardAccess().getProvidesKeyword_6_1_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBoardRule());
							}
						}
						otherlv_8=RULE_ID
						{
							newLeafNode(otherlv_8, grammarAccess.getBoardAccess().getComponentsHWCompCrossReference_6_1_1_0());
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getBoardAccess().getRightCurlyBracketKeyword_6_2());
			}
		)?
	)
;

// Entry rule entryRuleSketch
entryRuleSketch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSketchRule()); }
	iv_ruleSketch=ruleSketch
	{ $current=$iv_ruleSketch.current; }
	EOF;

// Rule Sketch
ruleSketch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSketchAccess().getSketchAction_0(),
					$current);
			}
		)
		otherlv_1='sketch'
		{
			newLeafNode(otherlv_1, grammarAccess.getSketchAccess().getSketchKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSketchAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSketchAccess().getActivityIotActivityParserRuleCall_3_0());
				}
				lv_activity_3_0=ruleIotActivity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSketchRule());
					}
					set(
						$current,
						"activity",
						lv_activity_3_0,
						"iot.lua.xtext.IotLuaXtext.IotActivity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSketchAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleIotOperationDef
entryRuleIotOperationDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIotOperationDefRule()); }
	iv_ruleIotOperationDef=ruleIotOperationDef
	{ $current=$iv_ruleIotOperationDef.current; }
	EOF;

// Rule IotOperationDef
ruleIotOperationDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIotOperationDefAccess().getIotOperationDefBindOperationDefAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIotOperationDefAccess().getDelegateOperationDefParserRuleCall_1_0());
				}
				lv_delegate_1_0=ruleOperationDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIotOperationDefRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_1_0,
						"iot.lua.xtext.IotLuaXtext.OperationDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationDef
entryRuleOperationDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefRule()); }
	iv_ruleOperationDef=ruleOperationDef
	{ $current=$iv_ruleOperationDef.current; }
	EOF;

// Rule OperationDef
ruleOperationDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='operation'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationDefAccess().getOperationKeyword_0());
		}
		(
			(
				lv_identifier_1_0=RULE_ID
				{
					newLeafNode(lv_identifier_1_0, grammarAccess.getOperationDefAccess().getIdentifierIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationDefRule());
					}
					setWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getOperationDefAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefAccess().getParametersParameterDefParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleParameterDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"iot.lua.xtext.IotLuaXtext.ParameterDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getOperationDefAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationDefAccess().getParametersParameterDefParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleParameterDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationDefRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"iot.lua.xtext.IotLuaXtext.ParameterDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getOperationDefAccess().getRightParenthesisKeyword_4());
		}
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getOperationDefAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationDefAccess().getStmtIdlStmtParserRuleCall_6_0());
				}
				lv_stmt_8_0=ruleIdlStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationDefRule());
					}
					set(
						$current,
						"stmt",
						lv_stmt_8_0,
						"iot.lua.xtext.IotLuaXtext.IdlStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getOperationDefAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleIdlStmt
entryRuleIdlStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdlStmtRule()); }
	iv_ruleIdlStmt=ruleIdlStmt
	{ $current=$iv_ruleIdlStmt.current; }
	EOF;

// Rule IdlStmt
ruleIdlStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIdlStmtAccess().getIdlStmtBindBlockAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIdlStmtAccess().getDelegateBlockParserRuleCall_1_0());
				}
				lv_delegate_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdlStmtRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_1_0,
						"iot.lua.xtext.IotLuaXtext.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameterDef
entryRuleParameterDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterDefRule()); }
	iv_ruleParameterDef=ruleParameterDef
	{ $current=$iv_ruleParameterDef.current; }
	EOF;

// Rule ParameterDef
ruleParameterDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterDefAccess().getDirectionParam_attributeEnumRuleCall_0_0());
				}
				lv_direction_0_0=ruleparam_attribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterDefRule());
					}
					set(
						$current,
						"direction",
						lv_direction_0_0,
						"iot.lua.xtext.IotLuaXtext.param_attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_identifier_1_0=RULE_ID
				{
					newLeafNode(lv_identifier_1_0, grammarAccess.getParameterDefAccess().getIdentifierIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterDefRule());
					}
					setWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulefloating_pt_type
entryRulefloating_pt_type returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloating_pt_typeRule()); }
	iv_rulefloating_pt_type=rulefloating_pt_type
	{ $current=$iv_rulefloating_pt_type.current; }
	EOF;

// Rule floating_pt_type
rulefloating_pt_type returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFloating_pt_typeAccess().getKindFloat_typeEnumRuleCall_0_0());
				}
				lv_kind_0_0=rulefloat_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFloating_pt_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"iot.lua.xtext.IotLuaXtext.float_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFloating_pt_typeAccess().getKindDouble_typeEnumRuleCall_1_0());
				}
				lv_kind_1_0=ruledouble_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFloating_pt_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"iot.lua.xtext.IotLuaXtext.double_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFloating_pt_typeAccess().getKindLongdouble_typeParserRuleCall_2_0());
				}
				lv_kind_2_0=rulelongdouble_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFloating_pt_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_2_0,
						"iot.lua.xtext.IotLuaXtext.longdouble_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulelongdouble_type
entryRulelongdouble_type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLongdouble_typeRule()); }
	iv_rulelongdouble_type=rulelongdouble_type
	{ $current=$iv_rulelongdouble_type.current.getText(); }
	EOF;

// Rule longdouble_type
rulelongdouble_type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLongdouble_typeAccess().getLongKeyword_0());
		}
		kw='double'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLongdouble_typeAccess().getDoubleKeyword_1());
		}
	)
;

// Entry rule entryRuleinteger_type
entryRuleinteger_type returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInteger_typeRule()); }
	iv_ruleinteger_type=ruleinteger_type
	{ $current=$iv_ruleinteger_type.current; }
	EOF;

// Rule integer_type
ruleinteger_type returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindShort_typeEnumRuleCall_0_0());
				}
				lv_kind_0_0=ruleshort_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"iot.lua.xtext.IotLuaXtext.short_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindLong_typeEnumRuleCall_1_0());
				}
				lv_kind_1_0=rulelong_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"iot.lua.xtext.IotLuaXtext.long_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindLonglong_typeParserRuleCall_2_0());
				}
				lv_kind_2_0=rulelonglong_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_2_0,
						"iot.lua.xtext.IotLuaXtext.longlong_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindUshort_typeParserRuleCall_3_0());
				}
				lv_kind_3_0=ruleushort_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_3_0,
						"iot.lua.xtext.IotLuaXtext.ushort_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindUlong_typeParserRuleCall_4_0());
				}
				lv_kind_4_0=ruleulong_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_4_0,
						"iot.lua.xtext.IotLuaXtext.ulong_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInteger_typeAccess().getKindUlonglong_typeParserRuleCall_5_0());
				}
				lv_kind_5_0=ruleulonglong_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteger_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_5_0,
						"iot.lua.xtext.IotLuaXtext.ulonglong_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulelonglong_type
entryRulelonglong_type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLonglong_typeRule()); }
	iv_rulelonglong_type=rulelonglong_type
	{ $current=$iv_rulelonglong_type.current.getText(); }
	EOF;

// Rule longlong_type
rulelonglong_type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLonglong_typeAccess().getLongKeyword_0());
		}
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLonglong_typeAccess().getLongKeyword_1());
		}
	)
;

// Entry rule entryRuleushort_type
entryRuleushort_type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUshort_typeRule()); }
	iv_ruleushort_type=ruleushort_type
	{ $current=$iv_ruleushort_type.current.getText(); }
	EOF;

// Rule ushort_type
ruleushort_type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='unsigned'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUshort_typeAccess().getUnsignedKeyword_0());
		}
		kw='short'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUshort_typeAccess().getShortKeyword_1());
		}
	)
;

// Entry rule entryRuleulong_type
entryRuleulong_type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUlong_typeRule()); }
	iv_ruleulong_type=ruleulong_type
	{ $current=$iv_ruleulong_type.current.getText(); }
	EOF;

// Rule ulong_type
ruleulong_type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='unsigned'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUlong_typeAccess().getUnsignedKeyword_0());
		}
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUlong_typeAccess().getLongKeyword_1());
		}
	)
;

// Entry rule entryRuleulonglong_type
entryRuleulonglong_type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUlonglong_typeRule()); }
	iv_ruleulonglong_type=ruleulonglong_type
	{ $current=$iv_ruleulonglong_type.current.getText(); }
	EOF;

// Rule ulonglong_type
ruleulonglong_type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='unsigned'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUlonglong_typeAccess().getUnsignedKeyword_0());
		}
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUlonglong_typeAccess().getLongKeyword_1());
		}
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUlonglong_typeAccess().getLongKeyword_2());
		}
	)
;

// Entry rule entryRulecharstr_type
entryRulecharstr_type returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharstr_typeRule()); }
	iv_rulecharstr_type=rulecharstr_type
	{ $current=$iv_rulecharstr_type.current; }
	EOF;

// Rule charstr_type
rulecharstr_type returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCharstr_typeAccess().getKindChar_typeEnumRuleCall_0_0());
				}
				lv_kind_0_0=rulechar_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharstr_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"iot.lua.xtext.IotLuaXtext.char_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCharstr_typeAccess().getKindWide_char_typeEnumRuleCall_1_0());
				}
				lv_kind_1_0=rulewide_char_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharstr_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"iot.lua.xtext.IotLuaXtext.wide_char_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCharstr_typeAccess().getKindString_typeEnumRuleCall_2_0());
				}
				lv_kind_2_0=rulestring_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharstr_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_2_0,
						"iot.lua.xtext.IotLuaXtext.string_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCharstr_typeAccess().getKindWide_string_typeEnumRuleCall_3_0());
				}
				lv_kind_3_0=rulewide_string_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharstr_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_3_0,
						"iot.lua.xtext.IotLuaXtext.wide_string_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleother_type
entryRuleother_type returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOther_typeRule()); }
	iv_ruleother_type=ruleother_type
	{ $current=$iv_ruleother_type.current; }
	EOF;

// Rule other_type
ruleother_type returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOther_typeAccess().getKindBoolean_typeEnumRuleCall_0_0());
				}
				lv_kind_0_0=ruleboolean_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOther_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"iot.lua.xtext.IotLuaXtext.boolean_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOther_typeAccess().getKindOctet_typeEnumRuleCall_1_0());
				}
				lv_kind_1_0=ruleoctet_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOther_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"iot.lua.xtext.IotLuaXtext.octet_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOther_typeAccess().getKindAny_typeEnumRuleCall_2_0());
				}
				lv_kind_2_0=ruleany_type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOther_typeRule());
					}
					set(
						$current,
						"kind",
						lv_kind_2_0,
						"iot.lua.xtext.IotLuaXtext.any_type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockAccess().getBlockAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_0_0());
					}
					lv_statements_1_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockRule());
						}
						add(
							$current,
							"statements",
							lv_statements_1_0,
							"iot.lua.xtext.IotLuaXtext.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=';'
				{
					newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getSemicolonKeyword_1_1());
				}
			)?
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockAccess().getReturnValueLastStatementParserRuleCall_2_0_0());
					}
					lv_returnValue_3_0=ruleLastStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockRule());
						}
						set(
							$current,
							"returnValue",
							lv_returnValue_3_0,
							"iot.lua.xtext.IotLuaXtext.LastStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=';'
				{
					newLeafNode(otherlv_4, grammarAccess.getBlockAccess().getSemicolonKeyword_2_1());
				}
			)?
		)?
	)
;

// Entry rule entryRuleLastStatement
entryRuleLastStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLastStatementRule()); }
	iv_ruleLastStatement=ruleLastStatement
	{ $current=$iv_ruleLastStatement.current; }
	EOF;

// Rule LastStatement
ruleLastStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLastStatementAccess().getLastStatement_ReturnParserRuleCall_0());
		}
		this_LastStatement_Return_0=ruleLastStatement_Return
		{
			$current = $this_LastStatement_Return_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLastStatementAccess().getLastStatement_BreakParserRuleCall_1());
		}
		this_LastStatement_Break_1=ruleLastStatement_Break
		{
			$current = $this_LastStatement_Break_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLastStatement_Return
entryRuleLastStatement_Return returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLastStatement_ReturnRule()); }
	iv_ruleLastStatement_Return=ruleLastStatement_Return
	{ $current=$iv_ruleLastStatement_Return.current; }
	EOF;

// Rule LastStatement_Return
ruleLastStatement_Return returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return'
		{
			newLeafNode(otherlv_0, grammarAccess.getLastStatement_ReturnAccess().getReturnKeyword_0());
		}
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLastStatement_ReturnAccess().getLastStatement_ReturnWithValueAction_1(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLastStatement_ReturnAccess().getReturnValuesExpressionParserRuleCall_2_0_0());
					}
					lv_returnValues_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLastStatement_ReturnRule());
						}
						add(
							$current,
							"returnValues",
							lv_returnValues_2_0,
							"iot.lua.xtext.IotLuaXtext.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getLastStatement_ReturnAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLastStatement_ReturnAccess().getReturnValuesExpressionParserRuleCall_2_1_1_0());
						}
						lv_returnValues_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLastStatement_ReturnRule());
							}
							add(
								$current,
								"returnValues",
								lv_returnValues_4_0,
								"iot.lua.xtext.IotLuaXtext.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleLastStatement_Break
entryRuleLastStatement_Break returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLastStatement_BreakRule()); }
	iv_ruleLastStatement_Break=ruleLastStatement_Break
	{ $current=$iv_ruleLastStatement_Break.current; }
	EOF;

// Rule LastStatement_Break
ruleLastStatement_Break returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='break'
		{
			newLeafNode(otherlv_0, grammarAccess.getLastStatement_BreakAccess().getBreakKeyword_0());
		}
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLastStatement_BreakAccess().getLastStatement_BreakAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStatement_BlockParserRuleCall_0());
		}
		this_Statement_Block_0=ruleStatement_Block
		{
			$current = $this_Statement_Block_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStatement_WhileParserRuleCall_1());
		}
		this_Statement_While_1=ruleStatement_While
		{
			$current = $this_Statement_While_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStatement_RepeatParserRuleCall_2());
		}
		this_Statement_Repeat_2=ruleStatement_Repeat
		{
			$current = $this_Statement_Repeat_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStatement_If_Then_ElseParserRuleCall_3());
		}
		this_Statement_If_Then_Else_3=ruleStatement_If_Then_Else
		{
			$current = $this_Statement_If_Then_Else_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStatement_For_NumericParserRuleCall_4());
		}
		this_Statement_For_Numeric_4=ruleStatement_For_Numeric
		{
			$current = $this_Statement_For_Numeric_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStatement_For_GenericParserRuleCall_5());
		}
		this_Statement_For_Generic_5=ruleStatement_For_Generic
		{
			$current = $this_Statement_For_Generic_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStatement_GlobalFunction_DeclarationParserRuleCall_6());
		}
		this_Statement_GlobalFunction_Declaration_6=ruleStatement_GlobalFunction_Declaration
		{
			$current = $this_Statement_GlobalFunction_Declaration_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStatement_LocalFunction_DeclarationParserRuleCall_7());
		}
		this_Statement_LocalFunction_Declaration_7=ruleStatement_LocalFunction_Declaration
		{
			$current = $this_Statement_LocalFunction_Declaration_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStatement_Local_Variable_DeclarationParserRuleCall_8());
		}
		this_Statement_Local_Variable_Declaration_8=ruleStatement_Local_Variable_Declaration
		{
			$current = $this_Statement_Local_Variable_Declaration_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStatement_FunctioncallOrAssignmentParserRuleCall_9());
		}
		this_Statement_FunctioncallOrAssignment_9=ruleStatement_FunctioncallOrAssignment
		{
			$current = $this_Statement_FunctioncallOrAssignment_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStatement_Block
entryRuleStatement_Block returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_BlockRule()); }
	iv_ruleStatement_Block=ruleStatement_Block
	{ $current=$iv_ruleStatement_Block.current; }
	EOF;

// Rule Statement_Block
ruleStatement_Block returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='do'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatement_BlockAccess().getDoKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_BlockAccess().getBlockBlockParserRuleCall_1_0());
				}
				lv_block_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_BlockRule());
					}
					set(
						$current,
						"block",
						lv_block_1_0,
						"iot.lua.xtext.IotLuaXtext.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='end'
		{
			newLeafNode(otherlv_2, grammarAccess.getStatement_BlockAccess().getEndKeyword_2());
		}
	)
;

// Entry rule entryRuleStatement_While
entryRuleStatement_While returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_WhileRule()); }
	iv_ruleStatement_While=ruleStatement_While
	{ $current=$iv_ruleStatement_While.current; }
	EOF;

// Rule Statement_While
ruleStatement_While returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatement_WhileAccess().getWhileKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_WhileAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_WhileRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"iot.lua.xtext.IotLuaXtext.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getStatement_WhileAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_WhileAccess().getBlockBlockParserRuleCall_3_0());
				}
				lv_block_3_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_WhileRule());
					}
					set(
						$current,
						"block",
						lv_block_3_0,
						"iot.lua.xtext.IotLuaXtext.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='end'
		{
			newLeafNode(otherlv_4, grammarAccess.getStatement_WhileAccess().getEndKeyword_4());
		}
	)
;

// Entry rule entryRuleStatement_Repeat
entryRuleStatement_Repeat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_RepeatRule()); }
	iv_ruleStatement_Repeat=ruleStatement_Repeat
	{ $current=$iv_ruleStatement_Repeat.current; }
	EOF;

// Rule Statement_Repeat
ruleStatement_Repeat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='repeat'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatement_RepeatAccess().getRepeatKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_RepeatAccess().getBlockBlockParserRuleCall_1_0());
				}
				lv_block_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_RepeatRule());
					}
					set(
						$current,
						"block",
						lv_block_1_0,
						"iot.lua.xtext.IotLuaXtext.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='until'
		{
			newLeafNode(otherlv_2, grammarAccess.getStatement_RepeatAccess().getUntilKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_RepeatAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_RepeatRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"iot.lua.xtext.IotLuaXtext.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatement_If_Then_Else
entryRuleStatement_If_Then_Else returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_If_Then_ElseRule()); }
	iv_ruleStatement_If_Then_Else=ruleStatement_If_Then_Else
	{ $current=$iv_ruleStatement_If_Then_Else.current; }
	EOF;

// Rule Statement_If_Then_Else
ruleStatement_If_Then_Else returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatement_If_Then_ElseAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_If_Then_ElseAccess().getIfExpressionExpressionParserRuleCall_1_0());
				}
				lv_ifExpression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_If_Then_ElseRule());
					}
					set(
						$current,
						"ifExpression",
						lv_ifExpression_1_0,
						"iot.lua.xtext.IotLuaXtext.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getStatement_If_Then_ElseAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_If_Then_ElseAccess().getIfBlockBlockParserRuleCall_3_0());
				}
				lv_ifBlock_3_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_If_Then_ElseRule());
					}
					set(
						$current,
						"ifBlock",
						lv_ifBlock_3_0,
						"iot.lua.xtext.IotLuaXtext.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_If_Then_ElseAccess().getElseIfStatement_If_Then_Else_ElseIfPartParserRuleCall_4_0());
				}
				lv_elseIf_4_0=ruleStatement_If_Then_Else_ElseIfPart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_If_Then_ElseRule());
					}
					add(
						$current,
						"elseIf",
						lv_elseIf_4_0,
						"iot.lua.xtext.IotLuaXtext.Statement_If_Then_Else_ElseIfPart");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getStatement_If_Then_ElseAccess().getElseKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatement_If_Then_ElseAccess().getElseBlockBlockParserRuleCall_5_1_0());
					}
					lv_elseBlock_6_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatement_If_Then_ElseRule());
						}
						set(
							$current,
							"elseBlock",
							lv_elseBlock_6_0,
							"iot.lua.xtext.IotLuaXtext.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='end'
		{
			newLeafNode(otherlv_7, grammarAccess.getStatement_If_Then_ElseAccess().getEndKeyword_6());
		}
	)
;

// Entry rule entryRuleStatement_If_Then_Else_ElseIfPart
entryRuleStatement_If_Then_Else_ElseIfPart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_If_Then_Else_ElseIfPartRule()); }
	iv_ruleStatement_If_Then_Else_ElseIfPart=ruleStatement_If_Then_Else_ElseIfPart
	{ $current=$iv_ruleStatement_If_Then_Else_ElseIfPart.current; }
	EOF;

// Rule Statement_If_Then_Else_ElseIfPart
ruleStatement_If_Then_Else_ElseIfPart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='elseif'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifExpressionExpressionParserRuleCall_1_0());
				}
				lv_elseifExpression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_If_Then_Else_ElseIfPartRule());
					}
					set(
						$current,
						"elseifExpression",
						lv_elseifExpression_1_0,
						"iot.lua.xtext.IotLuaXtext.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifBlockBlockParserRuleCall_3_0());
				}
				lv_elseifBlock_3_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_If_Then_Else_ElseIfPartRule());
					}
					set(
						$current,
						"elseifBlock",
						lv_elseifBlock_3_0,
						"iot.lua.xtext.IotLuaXtext.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatement_For_Numeric
entryRuleStatement_For_Numeric returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_For_NumericRule()); }
	iv_ruleStatement_For_Numeric=ruleStatement_For_Numeric
	{ $current=$iv_ruleStatement_For_Numeric.current; }
	EOF;

// Rule Statement_For_Numeric
ruleStatement_For_Numeric returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatement_For_NumericAccess().getForKeyword_0());
		}
		(
			(
				lv_iteratorName_1_0=RULE_ID
				{
					newLeafNode(lv_iteratorName_1_0, grammarAccess.getStatement_For_NumericAccess().getIteratorNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStatement_For_NumericRule());
					}
					setWithLastConsumed(
						$current,
						"iteratorName",
						lv_iteratorName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getStatement_For_NumericAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_For_NumericAccess().getStartExprExpressionParserRuleCall_3_0());
				}
				lv_startExpr_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_For_NumericRule());
					}
					set(
						$current,
						"startExpr",
						lv_startExpr_3_0,
						"iot.lua.xtext.IotLuaXtext.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getStatement_For_NumericAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_For_NumericAccess().getUntilExprExpressionParserRuleCall_5_0());
				}
				lv_untilExpr_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_For_NumericRule());
					}
					set(
						$current,
						"untilExpr",
						lv_untilExpr_5_0,
						"iot.lua.xtext.IotLuaXtext.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getStatement_For_NumericAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatement_For_NumericAccess().getStepExprExpressionParserRuleCall_6_1_0());
					}
					lv_stepExpr_7_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatement_For_NumericRule());
						}
						set(
							$current,
							"stepExpr",
							lv_stepExpr_7_0,
							"iot.lua.xtext.IotLuaXtext.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='do'
		{
			newLeafNode(otherlv_8, grammarAccess.getStatement_For_NumericAccess().getDoKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_For_NumericAccess().getBlockBlockParserRuleCall_8_0());
				}
				lv_block_9_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_For_NumericRule());
					}
					set(
						$current,
						"block",
						lv_block_9_0,
						"iot.lua.xtext.IotLuaXtext.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='end'
		{
			newLeafNode(otherlv_10, grammarAccess.getStatement_For_NumericAccess().getEndKeyword_9());
		}
	)
;

// Entry rule entryRuleStatement_For_Generic
entryRuleStatement_For_Generic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_For_GenericRule()); }
	iv_ruleStatement_For_Generic=ruleStatement_For_Generic
	{ $current=$iv_ruleStatement_For_Generic.current; }
	EOF;

// Rule Statement_For_Generic
ruleStatement_For_Generic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatement_For_GenericAccess().getForKeyword_0());
		}
		(
			(
				lv_names_1_0=RULE_ID
				{
					newLeafNode(lv_names_1_0, grammarAccess.getStatement_For_GenericAccess().getNamesIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStatement_For_GenericRule());
					}
					addWithLastConsumed(
						$current,
						"names",
						lv_names_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getStatement_For_GenericAccess().getCommaKeyword_2_0());
			}
			(
				(
					lv_names_3_0=RULE_ID
					{
						newLeafNode(lv_names_3_0, grammarAccess.getStatement_For_GenericAccess().getNamesIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStatement_For_GenericRule());
						}
						addWithLastConsumed(
							$current,
							"names",
							lv_names_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
		otherlv_4='in'
		{
			newLeafNode(otherlv_4, grammarAccess.getStatement_For_GenericAccess().getInKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_For_GenericAccess().getExpressionsExpressionParserRuleCall_4_0());
				}
				lv_expressions_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_For_GenericRule());
					}
					add(
						$current,
						"expressions",
						lv_expressions_5_0,
						"iot.lua.xtext.IotLuaXtext.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getStatement_For_GenericAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatement_For_GenericAccess().getExpressionsExpressionParserRuleCall_5_1_0());
					}
					lv_expressions_7_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatement_For_GenericRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_7_0,
							"iot.lua.xtext.IotLuaXtext.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='do'
		{
			newLeafNode(otherlv_8, grammarAccess.getStatement_For_GenericAccess().getDoKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_For_GenericAccess().getBlockBlockParserRuleCall_7_0());
				}
				lv_block_9_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_For_GenericRule());
					}
					set(
						$current,
						"block",
						lv_block_9_0,
						"iot.lua.xtext.IotLuaXtext.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='end'
		{
			newLeafNode(otherlv_10, grammarAccess.getStatement_For_GenericAccess().getEndKeyword_8());
		}
	)
;

// Entry rule entryRuleStatement_GlobalFunction_Declaration
entryRuleStatement_GlobalFunction_Declaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_GlobalFunction_DeclarationRule()); }
	iv_ruleStatement_GlobalFunction_Declaration=ruleStatement_GlobalFunction_Declaration
	{ $current=$iv_ruleStatement_GlobalFunction_Declaration.current; }
	EOF;

// Rule Statement_GlobalFunction_Declaration
ruleStatement_GlobalFunction_Declaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_prefix_1_0=RULE_ID
				{
					newLeafNode(lv_prefix_1_0, grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getPrefixIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStatement_GlobalFunction_DeclarationRule());
					}
					addWithLastConsumed(
						$current,
						"prefix",
						lv_prefix_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFullStopKeyword_2_0());
			}
			(
				(
					lv_prefix_3_0=RULE_ID
					{
						newLeafNode(lv_prefix_3_0, grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getPrefixIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStatement_GlobalFunction_DeclarationRule());
						}
						addWithLastConsumed(
							$current,
							"prefix",
							lv_prefix_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getColonKeyword_3_0());
			}
			(
				(
					lv_functionName_5_0=RULE_ID
					{
						newLeafNode(lv_functionName_5_0, grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStatement_GlobalFunction_DeclarationRule());
						}
						setWithLastConsumed(
							$current,
							"functionName",
							lv_functionName_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionFunctionParserRuleCall_4_0());
				}
				lv_function_6_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_GlobalFunction_DeclarationRule());
					}
					set(
						$current,
						"function",
						lv_function_6_0,
						"iot.lua.xtext.IotLuaXtext.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='end'
		{
			newLeafNode(otherlv_7, grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getEndKeyword_5());
		}
	)
;

// Entry rule entryRuleStatement_LocalFunction_Declaration
entryRuleStatement_LocalFunction_Declaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_LocalFunction_DeclarationRule()); }
	iv_ruleStatement_LocalFunction_Declaration=ruleStatement_LocalFunction_Declaration
	{ $current=$iv_ruleStatement_LocalFunction_Declaration.current; }
	EOF;

// Rule Statement_LocalFunction_Declaration
ruleStatement_LocalFunction_Declaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='local'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatement_LocalFunction_DeclarationAccess().getLocalKeyword_0());
		}
		otherlv_1='function'
		{
			newLeafNode(otherlv_1, grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionKeyword_1());
		}
		(
			(
				lv_functionName_2_0=RULE_ID
				{
					newLeafNode(lv_functionName_2_0, grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStatement_LocalFunction_DeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"functionName",
						lv_functionName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionFunctionParserRuleCall_3_0());
				}
				lv_function_3_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatement_LocalFunction_DeclarationRule());
					}
					set(
						$current,
						"function",
						lv_function_3_0,
						"iot.lua.xtext.IotLuaXtext.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='end'
		{
			newLeafNode(otherlv_4, grammarAccess.getStatement_LocalFunction_DeclarationAccess().getEndKeyword_4());
		}
	)
;

// Entry rule entryRuleStatement_Local_Variable_Declaration
entryRuleStatement_Local_Variable_Declaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_Local_Variable_DeclarationRule()); }
	iv_ruleStatement_Local_Variable_Declaration=ruleStatement_Local_Variable_Declaration
	{ $current=$iv_ruleStatement_Local_Variable_Declaration.current; }
	EOF;

// Rule Statement_Local_Variable_Declaration
ruleStatement_Local_Variable_Declaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='local'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatement_Local_Variable_DeclarationAccess().getLocalKeyword_0());
		}
		(
			(
				lv_variableNames_1_0=RULE_ID
				{
					newLeafNode(lv_variableNames_1_0, grammarAccess.getStatement_Local_Variable_DeclarationAccess().getVariableNamesIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStatement_Local_Variable_DeclarationRule());
					}
					addWithLastConsumed(
						$current,
						"variableNames",
						lv_variableNames_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getStatement_Local_Variable_DeclarationAccess().getCommaKeyword_2_0());
			}
			(
				(
					lv_variableNames_3_0=RULE_ID
					{
						newLeafNode(lv_variableNames_3_0, grammarAccess.getStatement_Local_Variable_DeclarationAccess().getVariableNamesIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStatement_Local_Variable_DeclarationRule());
						}
						addWithLastConsumed(
							$current,
							"variableNames",
							lv_variableNames_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getStatement_Local_Variable_DeclarationAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getInitialValueExpressionParserRuleCall_3_1_0());
					}
					lv_initialValue_5_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatement_Local_Variable_DeclarationRule());
						}
						add(
							$current,
							"initialValue",
							lv_initialValue_5_0,
							"iot.lua.xtext.IotLuaXtext.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getStatement_Local_Variable_DeclarationAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getInitialValueExpressionParserRuleCall_3_2_1_0());
						}
						lv_initialValue_7_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatement_Local_Variable_DeclarationRule());
							}
							add(
								$current,
								"initialValue",
								lv_initialValue_7_0,
								"iot.lua.xtext.IotLuaXtext.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleStatement_FunctioncallOrAssignment
entryRuleStatement_FunctioncallOrAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatement_FunctioncallOrAssignmentRule()); }
	iv_ruleStatement_FunctioncallOrAssignment=ruleStatement_FunctioncallOrAssignment
	{ $current=$iv_ruleStatement_FunctioncallOrAssignment.current; }
	EOF;

// Rule Statement_FunctioncallOrAssignment
ruleStatement_FunctioncallOrAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getExpression_AccessMemberOrArrayElementParserRuleCall_0());
		}
		this_Expression_AccessMemberOrArrayElement_0=ruleExpression_AccessMemberOrArrayElement
		{
			$current = $this_Expression_AccessMemberOrArrayElement_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getStatement_AssignmentVariableAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(',')=>
						otherlv_2=','
						{
							newLeafNode(otherlv_2, grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getCommaKeyword_1_0_1_0());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getVariableExpression_AccessMemberOrArrayElementParserRuleCall_1_0_1_1_0());
							}
							lv_variable_3_0=ruleExpression_AccessMemberOrArrayElement
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStatement_FunctioncallOrAssignmentRule());
								}
								add(
									$current,
									"variable",
									lv_variable_3_0,
									"iot.lua.xtext.IotLuaXtext.Expression_AccessMemberOrArrayElement");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_4='='
				{
					newLeafNode(otherlv_4, grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getEqualsSignKeyword_1_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getValuesExpressionParserRuleCall_1_0_3_0());
						}
						lv_values_5_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatement_FunctioncallOrAssignmentRule());
							}
							add(
								$current,
								"values",
								lv_values_5_0,
								"iot.lua.xtext.IotLuaXtext.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getCommaKeyword_1_0_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getValuesExpressionParserRuleCall_1_0_4_1_0());
							}
							lv_values_7_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStatement_FunctioncallOrAssignmentRule());
								}
								add(
									$current,
									"values",
									lv_values_7_0,
									"iot.lua.xtext.IotLuaXtext.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				otherlv_8=':'
				{
					newLeafNode(otherlv_8, grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getColonKeyword_1_1_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getStatement_CallMemberFunctionObjectAction_1_1_1(),
							$current);
					}
				)
				(
					(
						lv_memberFunctionName_10_0=RULE_ID
						{
							newLeafNode(lv_memberFunctionName_10_0, grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getMemberFunctionNameIDTerminalRuleCall_1_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStatement_FunctioncallOrAssignmentRule());
							}
							setWithLastConsumed(
								$current,
								"memberFunctionName",
								lv_memberFunctionName_10_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_1_3_0());
						}
						lv_arguments_11_0=ruleFunctioncall_Arguments
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatement_FunctioncallOrAssignmentRule());
							}
							set(
								$current,
								"arguments",
								lv_arguments_11_0,
								"iot.lua.xtext.IotLuaXtext.Functioncall_Arguments");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getStatement_CallFunctionObjectAction_1_2_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_2_1_0());
						}
						lv_arguments_13_0=ruleFunctioncall_Arguments
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatement_FunctioncallOrAssignmentRule());
							}
							set(
								$current,
								"arguments",
								lv_arguments_13_0,
								"iot.lua.xtext.IotLuaXtext.Functioncall_Arguments");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getExpression_OrParserRuleCall());
	}
	this_Expression_Or_0=ruleExpression_Or
	{
		$current = $this_Expression_Or_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpression_Or
entryRuleExpression_Or returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_OrRule()); }
	iv_ruleExpression_Or=ruleExpression_Or
	{ $current=$iv_ruleExpression_Or.current; }
	EOF;

// Rule Expression_Or
ruleExpression_Or returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_OrAccess().getExpression_AndParserRuleCall_0());
		}
		this_Expression_And_0=ruleExpression_And
		{
			$current = $this_Expression_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='or'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpression_OrAccess().getOrKeyword_1_0());
			}
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpression_OrAccess().getExpression_OrLeftAction_1_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_OrAccess().getRightExpression_AndParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpression_And
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_OrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"iot.lua.xtext.IotLuaXtext.Expression_And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_And
entryRuleExpression_And returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_AndRule()); }
	iv_ruleExpression_And=ruleExpression_And
	{ $current=$iv_ruleExpression_And.current; }
	EOF;

// Rule Expression_And
ruleExpression_And returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_AndAccess().getExpression_CompareParserRuleCall_0());
		}
		this_Expression_Compare_0=ruleExpression_Compare
		{
			$current = $this_Expression_Compare_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='and'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpression_AndAccess().getAndKeyword_1_0());
			}
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpression_AndAccess().getExpression_AndLeftAction_1_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_AndAccess().getRightExpression_CompareParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpression_Compare
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_AndRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"iot.lua.xtext.IotLuaXtext.Expression_Compare");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_Compare
entryRuleExpression_Compare returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_CompareRule()); }
	iv_ruleExpression_Compare=ruleExpression_Compare
	{ $current=$iv_ruleExpression_Compare.current; }
	EOF;

// Rule Expression_Compare
ruleExpression_Compare returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_CompareAccess().getExpression_ConcatenationParserRuleCall_0());
		}
		this_Expression_Concatenation_0=ruleExpression_Concatenation
		{
			$current = $this_Expression_Concatenation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1='>'
				{
					newLeafNode(otherlv_1, grammarAccess.getExpression_CompareAccess().getGreaterThanSignKeyword_1_0_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_CompareAccess().getExpression_LargerLeftAction_1_0_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpression_Concatenation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_CompareRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"iot.lua.xtext.IotLuaXtext.Expression_Concatenation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='>='
				{
					newLeafNode(otherlv_4, grammarAccess.getExpression_CompareAccess().getGreaterThanSignEqualsSignKeyword_1_1_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_CompareAccess().getExpression_Larger_EqualLeftAction_1_1_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpression_Concatenation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_CompareRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"iot.lua.xtext.IotLuaXtext.Expression_Concatenation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_7='<'
				{
					newLeafNode(otherlv_7, grammarAccess.getExpression_CompareAccess().getLessThanSignKeyword_1_2_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_CompareAccess().getExpression_SmallerLeftAction_1_2_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=ruleExpression_Concatenation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_CompareRule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"iot.lua.xtext.IotLuaXtext.Expression_Concatenation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_10='<='
				{
					newLeafNode(otherlv_10, grammarAccess.getExpression_CompareAccess().getLessThanSignEqualsSignKeyword_1_3_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_CompareAccess().getExpression_Smaller_EqualLeftAction_1_3_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_3_2_0());
						}
						lv_right_12_0=ruleExpression_Concatenation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_CompareRule());
							}
							set(
								$current,
								"right",
								lv_right_12_0,
								"iot.lua.xtext.IotLuaXtext.Expression_Concatenation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_13='=='
				{
					newLeafNode(otherlv_13, grammarAccess.getExpression_CompareAccess().getEqualsSignEqualsSignKeyword_1_4_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_CompareAccess().getExpression_EqualLeftAction_1_4_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_4_2_0());
						}
						lv_right_15_0=ruleExpression_Concatenation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_CompareRule());
							}
							set(
								$current,
								"right",
								lv_right_15_0,
								"iot.lua.xtext.IotLuaXtext.Expression_Concatenation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_16='~='
				{
					newLeafNode(otherlv_16, grammarAccess.getExpression_CompareAccess().getTildeEqualsSignKeyword_1_5_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_CompareAccess().getExpression_Not_EqualLeftAction_1_5_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_5_2_0());
						}
						lv_right_18_0=ruleExpression_Concatenation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_CompareRule());
							}
							set(
								$current,
								"right",
								lv_right_18_0,
								"iot.lua.xtext.IotLuaXtext.Expression_Concatenation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_Concatenation
entryRuleExpression_Concatenation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_ConcatenationRule()); }
	iv_ruleExpression_Concatenation=ruleExpression_Concatenation
	{ $current=$iv_ruleExpression_Concatenation.current; }
	EOF;

// Rule Expression_Concatenation
ruleExpression_Concatenation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_ConcatenationAccess().getExpression_PlusMinusParserRuleCall_0());
		}
		this_Expression_PlusMinus_0=ruleExpression_PlusMinus
		{
			$current = $this_Expression_PlusMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='..'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpression_ConcatenationAccess().getFullStopFullStopKeyword_1_0());
			}
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpression_ConcatenationAccess().getExpression_ConcatenationLeftAction_1_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_ConcatenationAccess().getRightExpression_ConcatenationParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpression_Concatenation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_ConcatenationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"iot.lua.xtext.IotLuaXtext.Expression_Concatenation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpression_PlusMinus
entryRuleExpression_PlusMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_PlusMinusRule()); }
	iv_ruleExpression_PlusMinus=ruleExpression_PlusMinus
	{ $current=$iv_ruleExpression_PlusMinus.current; }
	EOF;

// Rule Expression_PlusMinus
ruleExpression_PlusMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_PlusMinusAccess().getExpression_MultiplicationDivisionModuloParserRuleCall_0());
		}
		this_Expression_MultiplicationDivisionModulo_0=ruleExpression_MultiplicationDivisionModulo
		{
			$current = $this_Expression_MultiplicationDivisionModulo_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1='+'
				{
					newLeafNode(otherlv_1, grammarAccess.getExpression_PlusMinusAccess().getPlusSignKeyword_1_0_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_PlusMinusAccess().getExpression_PlusLeftAction_1_0_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_PlusMinusAccess().getRightExpression_MultiplicationDivisionModuloParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpression_MultiplicationDivisionModulo
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_PlusMinusRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"iot.lua.xtext.IotLuaXtext.Expression_MultiplicationDivisionModulo");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='-'
				{
					newLeafNode(otherlv_4, grammarAccess.getExpression_PlusMinusAccess().getHyphenMinusKeyword_1_1_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_PlusMinusAccess().getExpression_MinusLeftAction_1_1_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_PlusMinusAccess().getRightExpression_MultiplicationDivisionModuloParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpression_MultiplicationDivisionModulo
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_PlusMinusRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"iot.lua.xtext.IotLuaXtext.Expression_MultiplicationDivisionModulo");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_MultiplicationDivisionModulo
entryRuleExpression_MultiplicationDivisionModulo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_MultiplicationDivisionModuloRule()); }
	iv_ruleExpression_MultiplicationDivisionModulo=ruleExpression_MultiplicationDivisionModulo
	{ $current=$iv_ruleExpression_MultiplicationDivisionModulo.current; }
	EOF;

// Rule Expression_MultiplicationDivisionModulo
ruleExpression_MultiplicationDivisionModulo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_UnaryParserRuleCall_0());
		}
		this_Expression_Unary_0=ruleExpression_Unary
		{
			$current = $this_Expression_Unary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1='*'
				{
					newLeafNode(otherlv_1, grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getAsteriskKeyword_1_0_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_MultiplicationLeftAction_1_0_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightExpression_UnaryParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpression_Unary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_MultiplicationDivisionModuloRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"iot.lua.xtext.IotLuaXtext.Expression_Unary");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='/'
				{
					newLeafNode(otherlv_4, grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getSolidusKeyword_1_1_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_DivisionLeftAction_1_1_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightExpression_UnaryParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpression_Unary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_MultiplicationDivisionModuloRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"iot.lua.xtext.IotLuaXtext.Expression_Unary");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_7='%'
				{
					newLeafNode(otherlv_7, grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getPercentSignKeyword_1_2_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_ModuloLeftAction_1_2_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightExpression_UnaryParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=ruleExpression_Unary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_MultiplicationDivisionModuloRule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"iot.lua.xtext.IotLuaXtext.Expression_Unary");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_Unary
entryRuleExpression_Unary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_UnaryRule()); }
	iv_ruleExpression_Unary=ruleExpression_Unary
	{ $current=$iv_ruleExpression_Unary.current; }
	EOF;

// Rule Expression_Unary
ruleExpression_Unary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_UnaryAccess().getExpression_ExponentiationParserRuleCall_0());
		}
		this_Expression_Exponentiation_0=ruleExpression_Exponentiation
		{
			$current = $this_Expression_Exponentiation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='not'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpression_UnaryAccess().getNotKeyword_1_0());
			}
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpression_UnaryAccess().getExpression_NegateAction_1_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_UnaryAccess().getExpExpression_UnaryParserRuleCall_1_2_0());
					}
					lv_exp_3_0=ruleExpression_Unary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_UnaryRule());
						}
						set(
							$current,
							"exp",
							lv_exp_3_0,
							"iot.lua.xtext.IotLuaXtext.Expression_Unary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_4='#'
			{
				newLeafNode(otherlv_4, grammarAccess.getExpression_UnaryAccess().getNumberSignKeyword_2_0());
			}
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpression_UnaryAccess().getExpression_LengthAction_2_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_UnaryAccess().getExpExpression_UnaryParserRuleCall_2_2_0());
					}
					lv_exp_6_0=ruleExpression_Unary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_UnaryRule());
						}
						set(
							$current,
							"exp",
							lv_exp_6_0,
							"iot.lua.xtext.IotLuaXtext.Expression_Unary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_7='-'
			{
				newLeafNode(otherlv_7, grammarAccess.getExpression_UnaryAccess().getHyphenMinusKeyword_3_0());
			}
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpression_UnaryAccess().getExpression_InvertAction_3_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_UnaryAccess().getExpExpression_UnaryParserRuleCall_3_2_0());
					}
					lv_exp_9_0=ruleExpression_Unary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_UnaryRule());
						}
						set(
							$current,
							"exp",
							lv_exp_9_0,
							"iot.lua.xtext.IotLuaXtext.Expression_Unary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExpression_Exponentiation
entryRuleExpression_Exponentiation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_ExponentiationRule()); }
	iv_ruleExpression_Exponentiation=ruleExpression_Exponentiation
	{ $current=$iv_ruleExpression_Exponentiation.current; }
	EOF;

// Rule Expression_Exponentiation
ruleExpression_Exponentiation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_ExponentiationAccess().getExpression_TerminalParserRuleCall_0());
		}
		this_Expression_Terminal_0=ruleExpression_Terminal
		{
			$current = $this_Expression_Terminal_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='^'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpression_ExponentiationAccess().getCircumflexAccentKeyword_1_0());
			}
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpression_ExponentiationAccess().getExpression_ExponentiationLeftAction_1_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_ExponentiationAccess().getRightExpression_ExponentiationParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpression_Exponentiation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_ExponentiationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"iot.lua.xtext.IotLuaXtext.Expression_Exponentiation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpression_Terminal
entryRuleExpression_Terminal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_TerminalRule()); }
	iv_ruleExpression_Terminal=ruleExpression_Terminal
	{ $current=$iv_ruleExpression_Terminal.current; }
	EOF;

// Rule Expression_Terminal
ruleExpression_Terminal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_TerminalAccess().getExpression_NilParserRuleCall_0());
		}
		this_Expression_Nil_0=ruleExpression_Nil
		{
			$current = $this_Expression_Nil_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_TerminalAccess().getExpression_TrueParserRuleCall_1());
		}
		this_Expression_True_1=ruleExpression_True
		{
			$current = $this_Expression_True_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_TerminalAccess().getExpression_FalseParserRuleCall_2());
		}
		this_Expression_False_2=ruleExpression_False
		{
			$current = $this_Expression_False_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_TerminalAccess().getExpression_NumberParserRuleCall_3());
		}
		this_Expression_Number_3=ruleExpression_Number
		{
			$current = $this_Expression_Number_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_TerminalAccess().getExpression_VarArgsParserRuleCall_4());
		}
		this_Expression_VarArgs_4=ruleExpression_VarArgs
		{
			$current = $this_Expression_VarArgs_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_TerminalAccess().getExpression_StringParserRuleCall_5());
		}
		this_Expression_String_5=ruleExpression_String
		{
			$current = $this_Expression_String_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_TerminalAccess().getExpression_FunctionParserRuleCall_6());
		}
		this_Expression_Function_6=ruleExpression_Function
		{
			$current = $this_Expression_Function_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_TerminalAccess().getExpression_TableConstructorParserRuleCall_7());
		}
		this_Expression_TableConstructor_7=ruleExpression_TableConstructor
		{
			$current = $this_Expression_TableConstructor_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_TerminalAccess().getExpression_FunctioncallParserRuleCall_8());
		}
		this_Expression_Functioncall_8=ruleExpression_Functioncall
		{
			$current = $this_Expression_Functioncall_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpression_Nil
entryRuleExpression_Nil returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_NilRule()); }
	iv_ruleExpression_Nil=ruleExpression_Nil
	{ $current=$iv_ruleExpression_Nil.current; }
	EOF;

// Rule Expression_Nil
ruleExpression_Nil returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='nil'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpression_NilAccess().getNilKeyword_0());
		}
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpression_NilAccess().getExpression_NilAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleExpression_True
entryRuleExpression_True returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_TrueRule()); }
	iv_ruleExpression_True=ruleExpression_True
	{ $current=$iv_ruleExpression_True.current; }
	EOF;

// Rule Expression_True
ruleExpression_True returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='true'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpression_TrueAccess().getTrueKeyword_0());
		}
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpression_TrueAccess().getExpression_TrueAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleExpression_False
entryRuleExpression_False returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_FalseRule()); }
	iv_ruleExpression_False=ruleExpression_False
	{ $current=$iv_ruleExpression_False.current; }
	EOF;

// Rule Expression_False
ruleExpression_False returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='false'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpression_FalseAccess().getFalseKeyword_0());
		}
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpression_FalseAccess().getExpression_FalseAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleExpression_Number
entryRuleExpression_Number returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_NumberRule()); }
	iv_ruleExpression_Number=ruleExpression_Number
	{ $current=$iv_ruleExpression_Number.current; }
	EOF;

// Rule Expression_Number
ruleExpression_Number returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExpression_NumberAccess().getValueDoubleParserRuleCall_0());
			}
			lv_value_0_0=ruleDouble
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getExpression_NumberRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"iot.lua.xtext.IotLuaXtext.Double");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleExpression_VarArgs
entryRuleExpression_VarArgs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_VarArgsRule()); }
	iv_ruleExpression_VarArgs=ruleExpression_VarArgs
	{ $current=$iv_ruleExpression_VarArgs.current; }
	EOF;

// Rule Expression_VarArgs
ruleExpression_VarArgs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='...'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpression_VarArgsAccess().getFullStopFullStopFullStopKeyword_0());
		}
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpression_VarArgsAccess().getExpression_VarArgsAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleExpression_String
entryRuleExpression_String returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_StringRule()); }
	iv_ruleExpression_String=ruleExpression_String
	{ $current=$iv_ruleExpression_String.current; }
	EOF;

// Rule Expression_String
ruleExpression_String returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getExpression_StringAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpression_StringRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleExpression_Function
entryRuleExpression_Function returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_FunctionRule()); }
	iv_ruleExpression_Function=ruleExpression_Function
	{ $current=$iv_ruleExpression_Function.current; }
	EOF;

// Rule Expression_Function
ruleExpression_Function returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpression_FunctionAccess().getFunctionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpression_FunctionAccess().getFunctionFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpression_FunctionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"iot.lua.xtext.IotLuaXtext.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='end'
		{
			newLeafNode(otherlv_2, grammarAccess.getExpression_FunctionAccess().getEndKeyword_2());
		}
	)
;

// Entry rule entryRuleExpression_TableConstructor
entryRuleExpression_TableConstructor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_TableConstructorRule()); }
	iv_ruleExpression_TableConstructor=ruleExpression_TableConstructor
	{ $current=$iv_ruleExpression_TableConstructor.current; }
	EOF;

// Rule Expression_TableConstructor
ruleExpression_TableConstructor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpression_TableConstructorAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpression_TableConstructorAccess().getExpression_TableConstructorAction_1(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_TableConstructorAccess().getFieldsFieldParserRuleCall_2_0_0());
					}
					lv_fields_2_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_TableConstructorRule());
						}
						add(
							$current,
							"fields",
							lv_fields_2_0,
							"iot.lua.xtext.IotLuaXtext.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getExpression_TableConstructorAccess().getCommaKeyword_2_1_0_0());
					}
					    |
					otherlv_4=';'
					{
						newLeafNode(otherlv_4, grammarAccess.getExpression_TableConstructorAccess().getSemicolonKeyword_2_1_0_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_TableConstructorAccess().getFieldsFieldParserRuleCall_2_1_1_0());
						}
						lv_fields_5_0=ruleField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_TableConstructorRule());
							}
							add(
								$current,
								"fields",
								lv_fields_5_0,
								"iot.lua.xtext.IotLuaXtext.Field");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getExpression_TableConstructorAccess().getCommaKeyword_2_2_0());
				}
				    |
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getExpression_TableConstructorAccess().getSemicolonKeyword_2_2_1());
				}
			)?
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getExpression_TableConstructorAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleExpression_Functioncall
entryRuleExpression_Functioncall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_FunctioncallRule()); }
	iv_ruleExpression_Functioncall=ruleExpression_Functioncall
	{ $current=$iv_ruleExpression_Functioncall.current; }
	EOF;

// Rule Expression_Functioncall
ruleExpression_Functioncall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_FunctioncallAccess().getExpression_AccessMemberOrArrayElementParserRuleCall_0());
		}
		this_Expression_AccessMemberOrArrayElement_0=ruleExpression_AccessMemberOrArrayElement
		{
			$current = $this_Expression_AccessMemberOrArrayElement_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(':')=>
					otherlv_1=':'
					{
						newLeafNode(otherlv_1, grammarAccess.getExpression_FunctioncallAccess().getColonKeyword_1_0_0());
					}
				)
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_FunctioncallAccess().getExpression_CallMemberFunctionObjectAction_1_0_1(),
							$current);
					}
				)
				(
					(
						lv_memberFunctionName_3_0=RULE_ID
						{
							newLeafNode(lv_memberFunctionName_3_0, grammarAccess.getExpression_FunctioncallAccess().getMemberFunctionNameIDTerminalRuleCall_1_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExpression_FunctioncallRule());
							}
							setWithLastConsumed(
								$current,
								"memberFunctionName",
								lv_memberFunctionName_3_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_FunctioncallAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_0_3_0());
						}
						lv_arguments_4_0=ruleFunctioncall_Arguments
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_FunctioncallRule());
							}
							set(
								$current,
								"arguments",
								lv_arguments_4_0,
								"iot.lua.xtext.IotLuaXtext.Functioncall_Arguments");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_FunctioncallAccess().getExpression_CallFunctionObjectAction_1_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_FunctioncallAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_1_1_0());
						}
						lv_arguments_6_0=ruleFunctioncall_Arguments
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_FunctioncallRule());
							}
							set(
								$current,
								"arguments",
								lv_arguments_6_0,
								"iot.lua.xtext.IotLuaXtext.Functioncall_Arguments");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleExpression_AccessMemberOrArrayElement
entryRuleExpression_AccessMemberOrArrayElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_AccessMemberOrArrayElementRule()); }
	iv_ruleExpression_AccessMemberOrArrayElement=ruleExpression_AccessMemberOrArrayElement
	{ $current=$iv_ruleExpression_AccessMemberOrArrayElement.current; }
	EOF;

// Rule Expression_AccessMemberOrArrayElement
ruleExpression_AccessMemberOrArrayElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getExpression_VariableNameParserRuleCall_0());
		}
		this_Expression_VariableName_0=ruleExpression_VariableName
		{
			$current = $this_Expression_VariableName_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1='['
				{
					newLeafNode(otherlv_1, grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getLeftSquareBracketKeyword_1_0_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getExpression_AccessArrayArrayAction_1_0_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getIndexExpressionParserRuleCall_1_0_2_0());
						}
						lv_index_3_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression_AccessMemberOrArrayElementRule());
							}
							set(
								$current,
								"index",
								lv_index_3_0,
								"iot.lua.xtext.IotLuaXtext.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=']'
				{
					newLeafNode(otherlv_4, grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getRightSquareBracketKeyword_1_0_3());
				}
			)
			    |
			(
				otherlv_5='.'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getFullStopKeyword_1_1_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getExpression_AccessMemberObjectAction_1_1_1(),
							$current);
					}
				)
				(
					(
						lv_memberName_7_0=RULE_ID
						{
							newLeafNode(lv_memberName_7_0, grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getMemberNameIDTerminalRuleCall_1_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExpression_AccessMemberOrArrayElementRule());
							}
							setWithLastConsumed(
								$current,
								"memberName",
								lv_memberName_7_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_VariableName
entryRuleExpression_VariableName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_VariableNameRule()); }
	iv_ruleExpression_VariableName=ruleExpression_VariableName
	{ $current=$iv_ruleExpression_VariableName.current; }
	EOF;

// Rule Expression_VariableName
ruleExpression_VariableName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getExpression_VariableNameAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getExpression_VariableNameAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpression_VariableNameAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpression_VariableNameAccess().getExpression_VariableNameAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_variable_4_0=RULE_ID
					{
						newLeafNode(lv_variable_4_0, grammarAccess.getExpression_VariableNameAccess().getVariableIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpression_VariableNameRule());
						}
						setWithLastConsumed(
							$current,
							"variable",
							lv_variable_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					lv_parameters_1_0=RULE_ID
					{
						newLeafNode(lv_parameters_1_0, grammarAccess.getFunctionAccess().getParametersIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFunctionRule());
						}
						addWithLastConsumed(
							$current,
							"parameters",
							lv_parameters_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						lv_parameters_3_0=RULE_ID
						{
							newLeafNode(lv_parameters_3_0, grammarAccess.getFunctionAccess().getParametersIDTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFunctionRule());
							}
							addWithLastConsumed(
								$current,
								"parameters",
								lv_parameters_3_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getCommaKeyword_1_2());
				}
			)?
		)?
		(
			(
				lv_varArgs_5_0='...'
				{
					newLeafNode(lv_varArgs_5_0, grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed($current, "varArgs", true, "...");
				}
			)
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getBodyBlockParserRuleCall_4_0());
				}
				lv_body_7_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"body",
						lv_body_7_0,
						"iot.lua.xtext.IotLuaXtext.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctioncall_Arguments
entryRuleFunctioncall_Arguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctioncall_ArgumentsRule()); }
	iv_ruleFunctioncall_Arguments=ruleFunctioncall_Arguments
	{ $current=$iv_ruleFunctioncall_Arguments.current; }
	EOF;

// Rule Functioncall_Arguments
ruleFunctioncall_Arguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctioncall_ArgumentsAccess().getFunctioncall_ArgumentsAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='('
				{
					newLeafNode(otherlv_1, grammarAccess.getFunctioncall_ArgumentsAccess().getLeftParenthesisKeyword_1_0_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpressionParserRuleCall_1_0_1_0_0());
							}
							lv_arguments_2_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctioncall_ArgumentsRule());
								}
								add(
									$current,
									"arguments",
									lv_arguments_2_0,
									"iot.lua.xtext.IotLuaXtext.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_3=','
						{
							newLeafNode(otherlv_3, grammarAccess.getFunctioncall_ArgumentsAccess().getCommaKeyword_1_0_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpressionParserRuleCall_1_0_1_1_1_0());
								}
								lv_arguments_4_0=ruleExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getFunctioncall_ArgumentsRule());
									}
									add(
										$current,
										"arguments",
										lv_arguments_4_0,
										"iot.lua.xtext.IotLuaXtext.Expression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getFunctioncall_ArgumentsAccess().getRightParenthesisKeyword_1_0_2());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpression_TableConstructorParserRuleCall_1_1_0());
					}
					lv_arguments_6_0=ruleExpression_TableConstructor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctioncall_ArgumentsRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_6_0,
							"iot.lua.xtext.IotLuaXtext.Expression_TableConstructor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpression_StringParserRuleCall_1_2_0());
					}
					lv_arguments_7_0=ruleExpression_String
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctioncall_ArgumentsRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_7_0,
							"iot.lua.xtext.IotLuaXtext.Expression_String");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFieldAccess().getField_AddEntryToTable_BracketsParserRuleCall_0());
		}
		this_Field_AddEntryToTable_Brackets_0=ruleField_AddEntryToTable_Brackets
		{
			$current = $this_Field_AddEntryToTable_Brackets_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFieldAccess().getField_AddEntryToTableParserRuleCall_1());
		}
		this_Field_AddEntryToTable_1=ruleField_AddEntryToTable
		{
			$current = $this_Field_AddEntryToTable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFieldAccess().getField_AppendEntryToTableParserRuleCall_2());
		}
		this_Field_AppendEntryToTable_2=ruleField_AppendEntryToTable
		{
			$current = $this_Field_AppendEntryToTable_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleField_AddEntryToTable_Brackets
entryRuleField_AddEntryToTable_Brackets returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getField_AddEntryToTable_BracketsRule()); }
	iv_ruleField_AddEntryToTable_Brackets=ruleField_AddEntryToTable_Brackets
	{ $current=$iv_ruleField_AddEntryToTable_Brackets.current; }
	EOF;

// Rule Field_AddEntryToTable_Brackets
ruleField_AddEntryToTable_Brackets returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getField_AddEntryToTable_BracketsAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getField_AddEntryToTable_BracketsAccess().getIndexExpressionExpressionParserRuleCall_1_0());
				}
				lv_indexExpression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getField_AddEntryToTable_BracketsRule());
					}
					set(
						$current,
						"indexExpression",
						lv_indexExpression_1_0,
						"iot.lua.xtext.IotLuaXtext.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getField_AddEntryToTable_BracketsAccess().getRightSquareBracketKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getField_AddEntryToTable_BracketsAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getField_AddEntryToTable_BracketsAccess().getValueExpressionParserRuleCall_4_0());
				}
				lv_value_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getField_AddEntryToTable_BracketsRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"iot.lua.xtext.IotLuaXtext.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleField_AddEntryToTable
entryRuleField_AddEntryToTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getField_AddEntryToTableRule()); }
	iv_ruleField_AddEntryToTable=ruleField_AddEntryToTable
	{ $current=$iv_ruleField_AddEntryToTable.current; }
	EOF;

// Rule Field_AddEntryToTable
ruleField_AddEntryToTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getField_AddEntryToTableAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getField_AddEntryToTableRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getField_AddEntryToTableAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getField_AddEntryToTableAccess().getValueExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getField_AddEntryToTableRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"iot.lua.xtext.IotLuaXtext.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleField_AppendEntryToTable
entryRuleField_AppendEntryToTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getField_AppendEntryToTableRule()); }
	iv_ruleField_AppendEntryToTable=ruleField_AppendEntryToTable
	{ $current=$iv_ruleField_AppendEntryToTable.current; }
	EOF;

// Rule Field_AppendEntryToTable
ruleField_AppendEntryToTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getField_AppendEntryToTableAccess().getValueExpressionParserRuleCall_0());
			}
			lv_value_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getField_AppendEntryToTableRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"iot.lua.xtext.IotLuaXtext.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleIotActivity
entryRuleIotActivity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIotActivityRule()); }
	iv_ruleIotActivity=ruleIotActivity
	{ $current=$iv_ruleIotActivity.current; }
	EOF;

// Rule IotActivity
ruleIotActivity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIotActivityAccess().getIotActivityBindActivityAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIotActivityAccess().getDelegateActivityParserRuleCall_1_0());
				}
				lv_delegate_1_0=ruleActivity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIotActivityRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_1_0,
						"iot.lua.xtext.IotLuaXtext.Activity");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleActivity
entryRuleActivity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityRule()); }
	iv_ruleActivity=ruleActivity
	{ $current=$iv_ruleActivity.current; }
	EOF;

// Rule Activity
ruleActivity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivityAccess().getActivityAction_0(),
					$current);
			}
		)
		otherlv_1='activity'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityAccess().getActivityKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getActivityAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getActivityAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityAccess().getInputsVariableParserRuleCall_3_1_0());
					}
					lv_inputs_4_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_4_0,
							"iot.lua.xtext.IotLuaXtext.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getActivityAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityAccess().getInputsVariableParserRuleCall_3_2_1_0());
						}
						lv_inputs_6_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityRule());
							}
							add(
								$current,
								"inputs",
								lv_inputs_6_0,
								"iot.lua.xtext.IotLuaXtext.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getActivityAccess().getRightParenthesisKeyword_3_3());
			}
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityAccess().getLocalsVariableParserRuleCall_5_0_0());
					}
					lv_locals_9_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityRule());
						}
						add(
							$current,
							"locals",
							lv_locals_9_0,
							"iot.lua.xtext.IotLuaXtext.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getActivityAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityAccess().getLocalsVariableParserRuleCall_5_1_1_0());
						}
						lv_locals_11_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityRule());
							}
							add(
								$current,
								"locals",
								lv_locals_11_0,
								"iot.lua.xtext.IotLuaXtext.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_12='nodes'
			{
				newLeafNode(otherlv_12, grammarAccess.getActivityAccess().getNodesKeyword_6_0());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityAccess().getNodesActivityNodeParserRuleCall_6_2_0());
					}
					lv_nodes_14_0=ruleActivityNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_14_0,
							"iot.lua.xtext.IotLuaXtext.ActivityNode");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getActivityAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityAccess().getNodesActivityNodeParserRuleCall_6_3_1_0());
						}
						lv_nodes_16_0=ruleActivityNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityRule());
							}
							add(
								$current,
								"nodes",
								lv_nodes_16_0,
								"iot.lua.xtext.IotLuaXtext.ActivityNode");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_18='edges'
			{
				newLeafNode(otherlv_18, grammarAccess.getActivityAccess().getEdgesKeyword_7_0());
			}
			otherlv_19='{'
			{
				newLeafNode(otherlv_19, grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityAccess().getEdgesActivityEdgeParserRuleCall_7_2_0());
					}
					lv_edges_20_0=ruleActivityEdge
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityRule());
						}
						add(
							$current,
							"edges",
							lv_edges_20_0,
							"iot.lua.xtext.IotLuaXtext.ActivityEdge");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_21=','
				{
					newLeafNode(otherlv_21, grammarAccess.getActivityAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityAccess().getEdgesActivityEdgeParserRuleCall_7_3_1_0());
						}
						lv_edges_22_0=ruleActivityEdge
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityRule());
							}
							add(
								$current,
								"edges",
								lv_edges_22_0,
								"iot.lua.xtext.IotLuaXtext.ActivityEdge");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_23='}'
			{
				newLeafNode(otherlv_23, grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_24='}'
		{
			newLeafNode(otherlv_24, grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleActivityNode
entryRuleActivityNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityNodeRule()); }
	iv_ruleActivityNode=ruleActivityNode
	{ $current=$iv_ruleActivityNode.current; }
	EOF;

// Rule ActivityNode
ruleActivityNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getOpaqueActionParserRuleCall_0());
		}
		this_OpaqueAction_0=ruleOpaqueAction
		{
			$current = $this_OpaqueAction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getInitialNodeParserRuleCall_1());
		}
		this_InitialNode_1=ruleInitialNode
		{
			$current = $this_InitialNode_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getActivityFinalNodeParserRuleCall_2());
		}
		this_ActivityFinalNode_2=ruleActivityFinalNode
		{
			$current = $this_ActivityFinalNode_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getForkNodeParserRuleCall_3());
		}
		this_ForkNode_3=ruleForkNode
		{
			$current = $this_ForkNode_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getJoinNodeParserRuleCall_4());
		}
		this_JoinNode_4=ruleJoinNode
		{
			$current = $this_JoinNode_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getMergeNodeParserRuleCall_5());
		}
		this_MergeNode_5=ruleMergeNode
		{
			$current = $this_MergeNode_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getActivityNodeAccess().getDecisionNodeParserRuleCall_6());
		}
		this_DecisionNode_6=ruleDecisionNode
		{
			$current = $this_DecisionNode_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleActivityEdge
entryRuleActivityEdge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityEdgeRule()); }
	iv_ruleActivityEdge=ruleActivityEdge
	{ $current=$iv_ruleActivityEdge.current; }
	EOF;

// Rule ActivityEdge
ruleActivityEdge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getActivityEdgeAccess().getControlFlowParserRuleCall());
	}
	this_ControlFlow_0=ruleControlFlow
	{
		$current = $this_ControlFlow_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableAccess().getIntegerVariableParserRuleCall_0());
		}
		this_IntegerVariable_0=ruleIntegerVariable
		{
			$current = $this_IntegerVariable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableAccess().getBooleanVariableParserRuleCall_1());
		}
		this_BooleanVariable_1=ruleBooleanVariable
		{
			$current = $this_BooleanVariable_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOpaqueAction
entryRuleOpaqueAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpaqueActionRule()); }
	iv_ruleOpaqueAction=ruleOpaqueAction
	{ $current=$iv_ruleOpaqueAction.current; }
	EOF;

// Rule OpaqueAction
ruleOpaqueAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getOpaqueActionAccess().getOpaqueActionAction_0(),
					$current);
			}
		)
		otherlv_1='action'
		{
			newLeafNode(otherlv_1, grammarAccess.getOpaqueActionAccess().getActionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOpaqueActionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOpaqueActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='comp'
			{
				newLeafNode(otherlv_3, grammarAccess.getOpaqueActionAccess().getCompKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getOpaqueActionAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOpaqueActionAccess().getExpressionsExpBindStatementParserRuleCall_3_2_0());
					}
					lv_expressions_5_0=ruleExpBindStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOpaqueActionRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_5_0,
							"iot.lua.xtext.IotLuaXtext.ExpBindStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getOpaqueActionAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOpaqueActionAccess().getExpressionsExpBindStatementParserRuleCall_3_3_1_0());
						}
						lv_expressions_7_0=ruleExpBindStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOpaqueActionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_7_0,
								"iot.lua.xtext.IotLuaXtext.ExpBindStatement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getOpaqueActionAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='in'
			{
				newLeafNode(otherlv_9, grammarAccess.getOpaqueActionAccess().getInKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getOpaqueActionAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpaqueActionRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getOpaqueActionAccess().getIncomingActivityEdgeCrossReference_4_2_0());
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getOpaqueActionAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOpaqueActionRule());
							}
						}
						otherlv_13=RULE_ID
						{
							newLeafNode(otherlv_13, grammarAccess.getOpaqueActionAccess().getIncomingActivityEdgeCrossReference_4_3_1_0());
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getOpaqueActionAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_15='out'
			{
				newLeafNode(otherlv_15, grammarAccess.getOpaqueActionAccess().getOutKeyword_5_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getOpaqueActionAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpaqueActionRule());
						}
					}
					otherlv_17=RULE_ID
					{
						newLeafNode(otherlv_17, grammarAccess.getOpaqueActionAccess().getOutgoingActivityEdgeCrossReference_5_2_0());
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getOpaqueActionAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOpaqueActionRule());
							}
						}
						otherlv_19=RULE_ID
						{
							newLeafNode(otherlv_19, grammarAccess.getOpaqueActionAccess().getOutgoingActivityEdgeCrossReference_5_3_1_0());
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getOpaqueActionAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_21='service'
			{
				newLeafNode(otherlv_21, grammarAccess.getOpaqueActionAccess().getServiceKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOpaqueActionAccess().getExpressionsExpBindOpDefParserRuleCall_6_1_0());
					}
					lv_expressions_22_0=ruleExpBindOpDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOpaqueActionRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_22_0,
							"iot.lua.xtext.IotLuaXtext.ExpBindOpDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpBindOpDef
entryRuleExpBindOpDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpBindOpDefRule()); }
	iv_ruleExpBindOpDef=ruleExpBindOpDef
	{ $current=$iv_ruleExpBindOpDef.current; }
	EOF;

// Rule ExpBindOpDef
ruleExpBindOpDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpBindOpDefAccess().getExpressionBindOperationDefAction_0(),
					$current);
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpBindOpDefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getExpBindOpDefAccess().getDelegateOperationDefCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleExpBindStatement
entryRuleExpBindStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpBindStatementRule()); }
	iv_ruleExpBindStatement=ruleExpBindStatement
	{ $current=$iv_ruleExpBindStatement.current; }
	EOF;

// Rule ExpBindStatement
ruleExpBindStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpBindStatementAccess().getExpressionBindStatementAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpBindStatementAccess().getDelegateStatementParserRuleCall_1_0());
				}
				lv_delegate_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpBindStatementRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_1_0,
						"iot.lua.xtext.IotLuaXtext.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInitialNode
entryRuleInitialNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialNodeRule()); }
	iv_ruleInitialNode=ruleInitialNode
	{ $current=$iv_ruleInitialNode.current; }
	EOF;

// Rule InitialNode
ruleInitialNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getInitialNodeAccess().getInitialNodeAction_0(),
					$current);
			}
		)
		otherlv_1='initial'
		{
			newLeafNode(otherlv_1, grammarAccess.getInitialNodeAccess().getInitialKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getInitialNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitialNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='out'
			{
				newLeafNode(otherlv_3, grammarAccess.getInitialNodeAccess().getOutKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getInitialNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInitialNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getInitialNodeAccess().getOutgoingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getInitialNodeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getInitialNodeRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getInitialNodeAccess().getOutgoingActivityEdgeCrossReference_3_3_1_0());
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getInitialNodeAccess().getRightParenthesisKeyword_3_4());
			}
		)
	)
;

// Entry rule entryRuleActivityFinalNode
entryRuleActivityFinalNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityFinalNodeRule()); }
	iv_ruleActivityFinalNode=ruleActivityFinalNode
	{ $current=$iv_ruleActivityFinalNode.current; }
	EOF;

// Rule ActivityFinalNode
ruleActivityFinalNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivityFinalNodeAccess().getActivityFinalNodeAction_0(),
					$current);
			}
		)
		otherlv_1='final'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityFinalNodeAccess().getFinalKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getActivityFinalNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivityFinalNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getActivityFinalNodeAccess().getInKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getActivityFinalNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActivityFinalNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getActivityFinalNodeAccess().getIncomingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getActivityFinalNodeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActivityFinalNodeRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getActivityFinalNodeAccess().getIncomingActivityEdgeCrossReference_3_3_1_0());
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getActivityFinalNodeAccess().getRightParenthesisKeyword_3_4());
			}
		)
	)
;

// Entry rule entryRuleForkNode
entryRuleForkNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForkNodeRule()); }
	iv_ruleForkNode=ruleForkNode
	{ $current=$iv_ruleForkNode.current; }
	EOF;

// Rule ForkNode
ruleForkNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getForkNodeAccess().getForkNodeAction_0(),
					$current);
			}
		)
		otherlv_1='fork'
		{
			newLeafNode(otherlv_1, grammarAccess.getForkNodeAccess().getForkKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getForkNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForkNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getForkNodeAccess().getInKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getForkNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getForkNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getForkNodeAccess().getIncomingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getForkNodeAccess().getRightParenthesisKeyword_3_3());
			}
		)
		(
			otherlv_7='out'
			{
				newLeafNode(otherlv_7, grammarAccess.getForkNodeAccess().getOutKeyword_4_0());
			}
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getForkNodeAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getForkNodeRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getForkNodeAccess().getOutgoingActivityEdgeCrossReference_4_2_0());
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getForkNodeAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getForkNodeRule());
							}
						}
						otherlv_11=RULE_ID
						{
							newLeafNode(otherlv_11, grammarAccess.getForkNodeAccess().getOutgoingActivityEdgeCrossReference_4_3_1_0());
						}
					)
				)
			)*
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getForkNodeAccess().getRightParenthesisKeyword_4_4());
			}
		)?
	)
;

// Entry rule entryRuleJoinNode
entryRuleJoinNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJoinNodeRule()); }
	iv_ruleJoinNode=ruleJoinNode
	{ $current=$iv_ruleJoinNode.current; }
	EOF;

// Rule JoinNode
ruleJoinNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getJoinNodeAccess().getJoinNodeAction_0(),
					$current);
			}
		)
		otherlv_1='join'
		{
			newLeafNode(otherlv_1, grammarAccess.getJoinNodeAccess().getJoinKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getJoinNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJoinNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getJoinNodeAccess().getInKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getJoinNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJoinNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getJoinNodeAccess().getIncomingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getJoinNodeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getJoinNodeRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getJoinNodeAccess().getIncomingActivityEdgeCrossReference_3_3_1_0());
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getJoinNodeAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='out'
			{
				newLeafNode(otherlv_9, grammarAccess.getJoinNodeAccess().getOutKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getJoinNodeAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJoinNodeRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getJoinNodeAccess().getOutgoingActivityEdgeCrossReference_4_2_0());
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getJoinNodeAccess().getRightParenthesisKeyword_4_3());
			}
		)
	)
;

// Entry rule entryRuleMergeNode
entryRuleMergeNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMergeNodeRule()); }
	iv_ruleMergeNode=ruleMergeNode
	{ $current=$iv_ruleMergeNode.current; }
	EOF;

// Rule MergeNode
ruleMergeNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMergeNodeAccess().getMergeNodeAction_0(),
					$current);
			}
		)
		otherlv_1='merge'
		{
			newLeafNode(otherlv_1, grammarAccess.getMergeNodeAccess().getMergeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMergeNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMergeNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getMergeNodeAccess().getInKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getMergeNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMergeNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getMergeNodeAccess().getIncomingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getMergeNodeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMergeNodeRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getMergeNodeAccess().getIncomingActivityEdgeCrossReference_3_3_1_0());
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getMergeNodeAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='out'
			{
				newLeafNode(otherlv_9, grammarAccess.getMergeNodeAccess().getOutKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getMergeNodeAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMergeNodeRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getMergeNodeAccess().getOutgoingActivityEdgeCrossReference_4_2_0());
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getMergeNodeAccess().getRightParenthesisKeyword_4_3());
			}
		)
	)
;

// Entry rule entryRuleDecisionNode
entryRuleDecisionNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecisionNodeRule()); }
	iv_ruleDecisionNode=ruleDecisionNode
	{ $current=$iv_ruleDecisionNode.current; }
	EOF;

// Rule DecisionNode
ruleDecisionNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getDecisionNodeAccess().getDecisionNodeAction_0(),
					$current);
			}
		)
		otherlv_1='decision'
		{
			newLeafNode(otherlv_1, grammarAccess.getDecisionNodeAccess().getDecisionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDecisionNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDecisionNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getDecisionNodeAccess().getInKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getDecisionNodeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDecisionNodeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getDecisionNodeAccess().getIncomingActivityEdgeCrossReference_3_2_0());
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getDecisionNodeAccess().getRightParenthesisKeyword_3_3());
			}
		)
		(
			otherlv_7='out'
			{
				newLeafNode(otherlv_7, grammarAccess.getDecisionNodeAccess().getOutKeyword_4_0());
			}
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getDecisionNodeAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDecisionNodeRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getDecisionNodeAccess().getOutgoingActivityEdgeCrossReference_4_2_0());
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getDecisionNodeAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDecisionNodeRule());
							}
						}
						otherlv_11=RULE_ID
						{
							newLeafNode(otherlv_11, grammarAccess.getDecisionNodeAccess().getOutgoingActivityEdgeCrossReference_4_3_1_0());
						}
					)
				)
			)*
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getDecisionNodeAccess().getRightParenthesisKeyword_4_4());
			}
		)?
	)
;

// Entry rule entryRuleIntegerVariable
entryRuleIntegerVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerVariableRule()); }
	iv_ruleIntegerVariable=ruleIntegerVariable
	{ $current=$iv_ruleIntegerVariable.current; }
	EOF;

// Rule IntegerVariable
ruleIntegerVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntegerVariableAccess().getIntegerVariableBindStatement_AssignmentAction_0(),
					$current);
			}
		)
		otherlv_1='int'
		{
			newLeafNode(otherlv_1, grammarAccess.getIntegerVariableAccess().getIntKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerVariableAccess().getDelegateStatement_FunctioncallOrAssignmentParserRuleCall_2_0());
				}
				lv_delegate_2_0=ruleStatement_FunctioncallOrAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerVariableRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_2_0,
						"iot.lua.xtext.IotLuaXtext.Statement_FunctioncallOrAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanVariable
entryRuleBooleanVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanVariableRule()); }
	iv_ruleBooleanVariable=ruleBooleanVariable
	{ $current=$iv_ruleBooleanVariable.current; }
	EOF;

// Rule BooleanVariable
ruleBooleanVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanVariableAccess().getBooleanVariableBindStatement_AssignmentAction_0(),
					$current);
			}
		)
		otherlv_1='bool'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanVariableAccess().getBoolKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanVariableAccess().getDelegateStatement_FunctioncallOrAssignmentParserRuleCall_2_0());
				}
				lv_delegate_2_0=ruleStatement_FunctioncallOrAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanVariableRule());
					}
					set(
						$current,
						"delegate",
						lv_delegate_2_0,
						"iot.lua.xtext.IotLuaXtext.Statement_FunctioncallOrAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	iv_ruleBooleanValue=ruleBooleanValue
	{ $current=$iv_ruleBooleanValue.current; }
	EOF;

// Rule BooleanValue
ruleBooleanValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_0());
			}
			lv_value_0_0=ruleEBoolean
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBooleanValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"iot.lua.xtext.IotLuaXtext.EBoolean");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleIntegerValue
entryRuleIntegerValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerValueRule()); }
	iv_ruleIntegerValue=ruleIntegerValue
	{ $current=$iv_ruleIntegerValue.current; }
	EOF;

// Rule IntegerValue
ruleIntegerValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntegerValueAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntegerValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleControlFlow
entryRuleControlFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlFlowRule()); }
	iv_ruleControlFlow=ruleControlFlow
	{ $current=$iv_ruleControlFlow.current; }
	EOF;

// Rule ControlFlow
ruleControlFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='flow'
		{
			newLeafNode(otherlv_0, grammarAccess.getControlFlowAccess().getFlowKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getControlFlowAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlFlowRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getControlFlowAccess().getFromKeyword_2());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlFlowRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getControlFlowAccess().getSourceActivityNodeCrossReference_3_0());
				}
			)
		)
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getControlFlowAccess().getToKeyword_4());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlFlowRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getControlFlowAccess().getTargetActivityNodeCrossReference_5_0());
				}
			)
		)
		(
			otherlv_6='['
			{
				newLeafNode(otherlv_6, grammarAccess.getControlFlowAccess().getLeftSquareBracketKeyword_6_0());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getControlFlowRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getControlFlowAccess().getGuardBooleanVariableCrossReference_6_1_0());
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getControlFlowAccess().getRightSquareBracketKeyword_6_2());
			}
		)?
	)
;

// Entry rule entryRuleDouble
entryRuleDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDoubleRule()); }
	iv_ruleDouble=ruleDouble
	{ $current=$iv_ruleDouble.current.getText(); }
	EOF;

// Rule Double
ruleDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getDoubleAccess().getFullStopKeyword_1_0());
			}
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_1());
			}
		)?
	)
;

// Rule BoardType
ruleBoardType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='RaspberryPi'
			{
				$current = grammarAccess.getBoardTypeAccess().getRaspberryPiEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBoardTypeAccess().getRaspberryPiEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Arduino'
			{
				$current = grammarAccess.getBoardTypeAccess().getArduinoEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBoardTypeAccess().getArduinoEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='BeagleBoard'
			{
				$current = grammarAccess.getBoardTypeAccess().getBeagleBoardEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBoardTypeAccess().getBeagleBoardEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule param_attribute
ruleparam_attribute returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getParam_attributeAccess().getPARAM_INEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getParam_attributeAccess().getPARAM_INEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getParam_attributeAccess().getPARAM_OUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getParam_attributeAccess().getPARAM_OUTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='inout'
			{
				$current = grammarAccess.getParam_attributeAccess().getPARAM_INOUTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getParam_attributeAccess().getPARAM_INOUTEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule float_type
rulefloat_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='float'
		{
			$current = grammarAccess.getFloat_typeAccess().getPK_FLOATEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getFloat_typeAccess().getPK_FLOATEnumLiteralDeclaration());
		}
	)
;

// Rule double_type
ruledouble_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='double'
		{
			$current = grammarAccess.getDouble_typeAccess().getPK_DOUBLEEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getDouble_typeAccess().getPK_DOUBLEEnumLiteralDeclaration());
		}
	)
;

// Rule short_type
ruleshort_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='short'
		{
			$current = grammarAccess.getShort_typeAccess().getPK_SHORTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getShort_typeAccess().getPK_SHORTEnumLiteralDeclaration());
		}
	)
;

// Rule long_type
rulelong_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='long'
		{
			$current = grammarAccess.getLong_typeAccess().getPK_LONGEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getLong_typeAccess().getPK_LONGEnumLiteralDeclaration());
		}
	)
;

// Rule char_type
rulechar_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='char'
		{
			$current = grammarAccess.getChar_typeAccess().getPK_CHAREnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getChar_typeAccess().getPK_CHAREnumLiteralDeclaration());
		}
	)
;

// Rule wide_char_type
rulewide_char_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='wchar'
		{
			$current = grammarAccess.getWide_char_typeAccess().getPK_WCHAREnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getWide_char_typeAccess().getPK_WCHAREnumLiteralDeclaration());
		}
	)
;

// Rule string_type
rulestring_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='string'
		{
			$current = grammarAccess.getString_typeAccess().getPK_STRINGEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getString_typeAccess().getPK_STRINGEnumLiteralDeclaration());
		}
	)
;

// Rule wide_string_type
rulewide_string_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='wstring'
		{
			$current = grammarAccess.getWide_string_typeAccess().getPK_WSTRINGEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getWide_string_typeAccess().getPK_WSTRINGEnumLiteralDeclaration());
		}
	)
;

// Rule boolean_type
ruleboolean_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='boolean'
		{
			$current = grammarAccess.getBoolean_typeAccess().getPK_BOOLEANEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBoolean_typeAccess().getPK_BOOLEANEnumLiteralDeclaration());
		}
	)
;

// Rule octet_type
ruleoctet_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='octet'
		{
			$current = grammarAccess.getOctet_typeAccess().getPK_OCTETEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getOctet_typeAccess().getPK_OCTETEnumLiteralDeclaration());
		}
	)
;

// Rule any_type
ruleany_type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='any'
		{
			$current = grammarAccess.getAny_typeAccess().getPK_ANYEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getAny_typeAccess().getPK_ANYEnumLiteralDeclaration());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
